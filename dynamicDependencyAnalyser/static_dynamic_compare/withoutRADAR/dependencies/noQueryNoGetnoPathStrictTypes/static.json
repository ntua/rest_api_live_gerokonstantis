{
  "info": {
    "nodes": "91",
    "interdependencyNodes": "59",
    "dependentOnlyNodes": "14",
    "derivingOnlyDependencyNodes": "32",
    "bothDependentDerivingNodes": "13",
    "edges": "677",
    "dependenciesPerAttribute": "1491",
    "bodyDependencies": "1491",
    "queryDependencies": "0",
    "pathDependencies": "0"
  },
  "endpoints": [
    {
      "name": "Add tracking information for multiple PayPal transactions",
      "url": "POST v1/shipping/trackers-batch",
      "method": "POST",
      "description": "Adds tracking information, with or without tracking numbers, for multiple PayPal transactions. Accepts up to 20 tracking IDs. For more information, see <a href=\\https://developer.paypal.com/docs/tracking/integrate/#add-tracking-information-with-tracking-numbers\\>Add tracking information with tracking numbers</a> and <a href=\\https://developer.paypal.com/docs/tracking/integrate/#add-tracking-information-without-tracking-numbers\\>Add tracking information without tracking numbers</a>.",
      "dependencies": [
        {
          "name": "Update plan",
          "url": "PATCH v1/billing/plans/:billing_plan_id",
          "method": "PATCH",
          "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Authorize payment for order",
      "url": "POST v2/checkout/orders/:order_id/authorize",
      "method": "POST",
      "description": "Authorizes payment for an order. To successfully authorize payment for an order, the buyer must first approve the order or a valid payment_source must be provided in the request. A buyer can approve the order upon being redirected to the rel:approve URL that was returned in the HATEOAS links in the create order response.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#link-authorizeorder\\>Orders v2 errors</a>.</blockquote>",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "email_address",
              "toKey": "recipient_email",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Cancel unclaimed payout item",
      "url": "POST v1/payments/payouts-item/:payout_item_id/cancel",
      "method": "POST",
      "description": "Cancels an unclaimed payout item, by ID. If no one claims the unclaimed item within 30 days, the API automatically returns the funds to the sender. Use this call to cancel the unclaimed item before the automatic 30-day refund. You can cancel payout items with a <code>transaction_status</code> of <code>UNCLAIMED</code>.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_type",
              "toKey": "recipient_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "sender_item_id",
              "toKey": "sender_item_id",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_wallet",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "recipient_wallet",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Capture authorized payment",
      "url": "POST v2/payments/authorizations/:authorization_id/capture",
      "method": "POST",
      "description": "Captures an authorized payment, by ID.",
      "dependencies": [
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Capture payment for order",
      "url": "POST v2/checkout/orders/:order_id/capture",
      "method": "POST",
      "description": "Captures payment for an order. To successfully capture payment for an order, the buyer must first approve the order or a valid payment_source must be provided in the request. A buyer can approve the order upon being redirected to the rel:approve URL that was returned in the HATEOAS links in the create order response.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#link-captureorder\\>Orders v2 errors</a>.</blockquote>",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "recipient_email",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Create draft invoice",
      "url": "POST v2/invoicing/invoices",
      "method": "POST",
      "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "invoice_date",
              "toKey": "invoice_date",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update plan",
          "url": "PATCH v1/billing/plans/:billing_plan_id",
          "method": "PATCH",
          "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Create order",
      "url": "POST v2/checkout/orders",
      "method": "POST",
      "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "intent",
              "toKey": "transaction_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Create plan",
      "url": "POST v1/billing/plans",
      "method": "POST",
      "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Create product",
      "url": "POST v1/catalogs/products",
      "method": "POST",
      "description": "Creates a product.",
      "dependencies": [
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Create subscription",
      "url": "POST v1/billing/subscriptions",
      "method": "POST",
      "description": "Creates a subscription.",
      "dependencies": [
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Create template",
      "url": "POST v2/invoicing/templates",
      "method": "POST",
      "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info_value",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "logo_url",
              "toKey": "logo_url",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_notes",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info_value",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tax_id",
              "toKey": "tax_id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "terms_and_conditions",
              "toKey": "term",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "website",
              "toKey": "website",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "terms_and_conditions",
              "toKey": "terms_and_conditions",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "website",
              "toKey": "website",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tax_id",
              "toKey": "tax_id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "id",
              "toKey": "id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_recipients",
              "toKey": "additional_recipients",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_notes",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "field_name",
              "toKey": "field_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "logo_url",
              "toKey": "logo_url",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Partially update dispute",
          "url": "PATCH v1/customer/disputes/:dispute_id",
          "method": "PATCH",
          "description": "",
          "attributes": [
            {
              "fromKey": "email_address",
              "toKey": "email",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "surname",
              "toKey": "recipient_last_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "recipient_first_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update plan",
          "url": "PATCH v1/billing/plans/:billing_plan_id",
          "method": "PATCH",
          "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Fully update template",
      "url": "PUT v2/invoicing/templates/:template_id",
      "method": "PUT",
      "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info_value",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "terms_and_conditions",
              "toKey": "terms_and_conditions",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tax_id",
              "toKey": "tax_id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "id",
              "toKey": "id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_recipients",
              "toKey": "additional_recipients",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_notes",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "field_name",
              "toKey": "field_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "website",
              "toKey": "website",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "logo_url",
              "toKey": "logo_url",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "terms_and_conditions",
              "toKey": "term",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info_value",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "logo_url",
              "toKey": "logo_url",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_notes",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "website",
              "toKey": "website",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tax_id",
              "toKey": "tax_id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Partially update dispute",
          "url": "PATCH v1/customer/disputes/:dispute_id",
          "method": "PATCH",
          "description": "",
          "attributes": [
            {
              "fromKey": "email_address",
              "toKey": "email",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "given_name",
              "toKey": "recipient_first_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "recipient_last_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update plan",
          "url": "PATCH v1/billing/plans/:billing_plan_id",
          "method": "PATCH",
          "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List all balances",
      "url": "GET v1/reporting/balances",
      "method": "GET",
      "description": "List all balances. Specify date time to list balances for that time that appear in the response.<blockquote><strong>Notes:</strong> <ul><li>It takes a maximum of three hours for balances to appear in the list balances call.</li><li>This call lists balances upto the previous three years.</li></ul></blockquote>",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List available events",
      "url": "GET v1/notifications/webhooks-event-types",
      "method": "GET",
      "description": "Lists available events to which any webhook can subscribe. For a list of supported events, see [Webhook event names](https://developer.paypal.com/docs/api/notifications/webhooks/event-names/).",
      "dependencies": [
        {
          "name": "Simulate webhook event",
          "url": "POST v1/notifications/simulate-event",
          "method": "POST",
          "description": "Use the `/simulate-event` resource to use a sample payload to simulate a webhook event. The events that this call generates only serve to validate the connection to the listener URL and to show how webhook events look. <blockquote><strong>Note:</strong> You can also use the <a href=\\https://developer.paypal.com/developer/webhooksSimulator/\\>Webhooks simulator</a> to simulate webhook events.</blockquote>\\n\\nSimulates a webhook event. In the JSON request body, specify a sample payload.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "event_type",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List disputes",
      "url": "GET v1/customer/disputes",
      "method": "GET",
      "description": "Lists disputes with a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_state</code>, <code>dispute_life_cycle_stage</code>, <code>dispute_channel</code>, <code>dispute_amount</code>, <code>create_time</code> and <code>update_time</code> fields.<br/><br/>To filter the disputes in the response, specify one or more optional query parameters. To limit the number of disputes in the response, specify the <code>page_size</code> query parameter.<br/><br/>To list multiple disputes, set these query parameters in the request:<ul><li><code>page_size=2</code></li><li><code>start_time</code> instead of <code>disputed_transaction_id</code></li></ul><br/>If the response contains more than two disputes, it lists two disputes and includes a HATEOAS link to the next page of results.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List event notifications",
      "url": "GET v1/notifications/webhooks-events",
      "method": "GET",
      "description": "Lists webhooks event notifications. Use query parameters to filter the response.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "sender_item_id",
              "toKey": "sender_item_id",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_type",
              "toKey": "recipient_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "interval_unit",
              "toKey": "interval_unit",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "tenure_type",
              "toKey": "tenure_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "setup_fee_failure_action",
              "toKey": "setup_fee_failure_action",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "recipient_wallet",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "full_name",
              "toKey": "full_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "full_name",
              "toKey": "full_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_wallet",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "total",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "subtotal",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Simulate webhook event",
          "url": "POST v1/notifications/simulate-event",
          "method": "POST",
          "description": "Use the `/simulate-event` resource to use a sample payload to simulate a webhook event. The events that this call generates only serve to validate the connection to the listener URL and to show how webhook events look. <blockquote><strong>Note:</strong> You can also use the <a href=\\https://developer.paypal.com/developer/webhooksSimulator/\\>Webhooks simulator</a> to simulate webhook events.</blockquote>\\n\\nSimulates a webhook event. In the JSON request body, specify a sample payload.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "resource_version",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "event_version",
              "toKey": "resource_version",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "full_name",
              "toKey": "full_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "event_type",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List event subscriptions for webhook",
      "url": "GET v1/notifications/webhooks/:webhook_id/event-types",
      "method": "GET",
      "description": "Lists event subscriptions for a webhook, by ID.",
      "dependencies": [
        {
          "name": "Create webhook",
          "url": "POST v1/notifications/webhooks",
          "method": "POST",
          "description": "Subscribes your webhook listener to events. For testing create a sample webhook endpoint on https://pipedream.com/ to receive webhook events sent by PayPal.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List invoices",
      "url": "GET v2/invoicing/invoices",
      "method": "GET",
      "description": "Lists invoices. To filter the invoices that appear in the response, you can specify one or more optional query parameters.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "due_date",
              "toKey": "due_date",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "invoice_date",
              "toKey": "invoice_date",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "reference",
              "toKey": "reference",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "reference",
              "toKey": "reference",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "due_date",
              "toKey": "due_date",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "invoice_date",
              "toKey": "invoice_date",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "recipient_first_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "recipient_email",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "recipient_last_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update plan",
          "url": "PATCH v1/billing/plans/:billing_plan_id",
          "method": "PATCH",
          "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List plans",
      "url": "GET v1/billing/plans",
      "method": "GET",
      "description": "Lists billing plans.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "setup_fee_failure_action",
              "toKey": "setup_fee_failure_action",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "interval_unit",
              "toKey": "interval_unit",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tenure_type",
              "toKey": "tenure_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Simulate webhook event",
          "url": "POST v1/notifications/simulate-event",
          "method": "POST",
          "description": "Use the `/simulate-event` resource to use a sample payload to simulate a webhook event. The events that this call generates only serve to validate the connection to the listener URL and to show how webhook events look. <blockquote><strong>Note:</strong> You can also use the <a href=\\https://developer.paypal.com/developer/webhooksSimulator/\\>Webhooks simulator</a> to simulate webhook events.</blockquote>\\n\\nSimulates a webhook event. In the JSON request body, specify a sample payload.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "resource_version",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List products",
      "url": "GET v1/catalogs/products",
      "method": "GET",
      "description": "Lists products.",
      "dependencies": [
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create product",
          "url": "POST v1/catalogs/products",
          "method": "POST",
          "description": "Creates a product.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "description",
              "toKey": "value",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "value",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List templates",
      "url": "GET v2/invoicing/templates",
      "method": "GET",
      "description": "Lists merchant-created templates with associated details. The associated details include the emails, addresses, and phone numbers from the user's PayPal profile.<br/>The user can select which values to show in the business information section of their template.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "field_name",
              "toKey": "field_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "field_name",
              "toKey": "field_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List transactions",
      "url": "GET v1/reporting/transactions",
      "method": "GET",
      "description": "Lists transactions. Specify one or more query parameters to filter the transaction that appear in the response.<blockquote><strong>Notes:</strong> <ul><li>If you specify one or more optional query parameters, the <code>ending_balance</code> response field is empty.</li><li>It takes a maximum of three hours for executed transactions to appear in the list transactions call.</li><li>This call lists transaction for the previous three years.</li></ul></blockquote>",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "transaction_note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "custom_field",
              "toKey": "sender_item_id",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "transaction_subject",
              "toKey": "email_subject",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "transaction_note",
              "toKey": "note_to_payer",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "transaction_subject",
              "toKey": "note_to_payer",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List transactions for subscription",
      "url": "GET v1/billing/subscriptions/:subscription_id/transactions",
      "method": "GET",
      "description": "Lists transactions for a subscription.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "List webhooks",
      "url": "GET v1/notifications/webhooks",
      "method": "GET",
      "description": "Lists webhooks for an app.",
      "dependencies": [
        {
          "name": "Create webhook",
          "url": "POST v1/notifications/webhooks",
          "method": "POST",
          "description": "Subscribes your webhook listener to events. For testing create a sample webhook endpoint on https://pipedream.com/ to receive webhook events sent by PayPal.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Reauthorize authorized payment",
      "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
      "method": "POST",
      "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Refund captured payment",
      "url": "POST v2/payments/captures/:capture_id/refund",
      "method": "POST",
      "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Resend event notification",
      "url": "POST v1/notifications/webhooks-events/:event_id/resend",
      "method": "POST",
      "description": "Resends a webhook event notification, by ID. Any pending notifications are not resent.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Simulate webhook event",
          "url": "POST v1/notifications/simulate-event",
          "method": "POST",
          "description": "Use the `/simulate-event` resource to use a sample payload to simulate a webhook event. The events that this call generates only serve to validate the connection to the listener URL and to show how webhook events look. <blockquote><strong>Note:</strong> You can also use the <a href=\\https://developer.paypal.com/developer/webhooksSimulator/\\>Webhooks simulator</a> to simulate webhook events.</blockquote>\\n\\nSimulates a webhook event. In the JSON request body, specify a sample payload.",
          "attributes": [
            {
              "fromKey": "event_version",
              "toKey": "resource_version",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Revise plan or quantity of subscription",
      "url": "POST v1/billing/subscriptions/:subscription_id/revise",
      "method": "POST",
      "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "full_name",
              "toKey": "full_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "full_name",
              "toKey": "full_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Search for invoices",
      "url": "POST v2/invoicing/search-invoices",
      "method": "POST",
      "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "reference",
              "toKey": "reference",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update plan",
          "url": "PATCH v1/billing/plans/:billing_plan_id",
          "method": "PATCH",
          "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show captured payment details",
      "url": "GET v2/payments/captures/:capture_id",
      "method": "GET",
      "description": "Shows details for a captured payment, by ID.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show details for authorized payment",
      "url": "GET v2/payments/authorizations/:authorization_id",
      "method": "GET",
      "description": "Shows details for an authorized payment, by ID.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show dispute details",
      "url": "GET v1/customer/disputes/:dispute_id",
      "method": "GET",
      "description": "Shows details for a dispute, by ID.<blockquote><strong>Note:</strong> The fields that appear in the response depend on whether you access this call through first- or third-party access. For example, if the merchant shows dispute details through third-party access, the customer's email ID does not appear.</blockquote>",
      "dependencies": [
        {
          "name": "Accept claim",
          "url": "POST v1/customer/disputes/:dispute_id/accept-claim",
          "method": "POST",
          "description": "Accepts liability for a claim, by ID. When you accept liability for a claim, the dispute closes in the customer\u2019s favor and PayPal automatically refunds money to the customer from the merchant's account. Allowed accept_claim_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "content",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "notes",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "response_option",
              "toKey": "accept_claim_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "offer_type",
              "toKey": "accept_claim_type",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "item_quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "item_quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "item_name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "item_description",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "item_quantity",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create product",
          "url": "POST v1/catalogs/products",
          "method": "POST",
          "description": "Creates a product.",
          "attributes": [
            {
              "fromKey": "item_description",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "item_name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "actor",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "full_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "item_quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "item_quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "item_quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "response_option",
              "toKey": "offer_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "offer_type",
              "toKey": "offer_type",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "actor",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "full_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update or cancel tracking information for PayPal transaction",
          "url": "PUT v1/shipping/trackers/:tracking_id",
          "method": "PUT",
          "description": "Updates or cancels the tracking information for a PayPal transaction, by ID. To cancel tracking information, call this method and set the status to CANCELLED. For more information, see <a href=\\https://developer.paypal.com/docs/tracking/integrate/#update-or-cancel-tracking-information\\>Update or cancel tracking information</a>.",
          "attributes": [
            {
              "fromKey": "evidence_type",
              "toKey": "carrier",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "full_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show event notification details",
      "url": "GET v1/notifications/webhooks-events/:event_id",
      "method": "GET",
      "description": "Shows details for a webhooks event notification, by ID.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Simulate webhook event",
          "url": "POST v1/notifications/simulate-event",
          "method": "POST",
          "description": "Use the `/simulate-event` resource to use a sample payload to simulate a webhook event. The events that this call generates only serve to validate the connection to the listener URL and to show how webhook events look. <blockquote><strong>Note:</strong> You can also use the <a href=\\https://developer.paypal.com/developer/webhooksSimulator/\\>Webhooks simulator</a> to simulate webhook events.</blockquote>\\n\\nSimulates a webhook event. In the JSON request body, specify a sample payload.",
          "attributes": [
            {
              "fromKey": "event_version",
              "toKey": "resource_version",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show invoice details",
      "url": "GET v2/invoicing/invoices/:invoice_id",
      "method": "GET",
      "description": "Shows details for an invoice, by ID.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_data",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "tax_id",
              "toKey": "tax_id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "invoice_date",
              "toKey": "invoice_date",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "logo_url",
              "toKey": "logo_url",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "terms_and_conditions",
              "toKey": "terms_and_conditions",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "due_date",
              "toKey": "due_date",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "reference",
              "toKey": "reference",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "website",
              "toKey": "website",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_notes",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "percent",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "recipient_email",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "recipient_last_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "recipient_first_name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update plan",
          "url": "PATCH v1/billing/plans/:billing_plan_id",
          "method": "PATCH",
          "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show order details",
      "url": "GET v2/checkout/orders/:order_id",
      "method": "GET",
      "description": "Shows details for an order, by ID.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#get-order\\>Orders v2 errors</a>.</blockquote>",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "intent",
              "toKey": "intent",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "intent",
              "toKey": "transaction_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "email_address",
              "toKey": "recipient_email",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show payout batch details",
      "url": "GET v1/payments/payouts/:payout_batch_id",
      "method": "GET",
      "description": "Shows the latest status of a batch payout. Includes the transaction status and other data for individual payout items.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "recipient_type",
              "toKey": "recipient_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_subject",
              "toKey": "email_subject",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "sender_item_id",
              "toKey": "sender_item_id",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "email_message",
              "toKey": "email_message",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "receiver",
              "toKey": "receiver",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_wallet",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_wallet",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show payout item details",
      "url": "GET v1/payments/payouts-item/:payout_item_id",
      "method": "GET",
      "description": "Shows details for a payout item, by ID. A <code>payout_item_id</code> helps you identify denied payments. If a payment is denied, you can use the <code>payout_item_id</code> to identify the payment even if it lacks a <code>transaction_id</code>.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "sender_item_id",
              "toKey": "sender_item_id",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_type",
              "toKey": "recipient_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_wallet",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "recipient_wallet",
              "toKey": "payer_selected",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show plan details",
      "url": "GET v1/billing/plans/:billing_plan_id",
      "method": "GET",
      "description": "Shows details for a plan, by ID.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "status",
              "toKey": "status",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tenure_type",
              "toKey": "tenure_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "interval_unit",
              "toKey": "interval_unit",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "setup_fee_failure_action",
              "toKey": "setup_fee_failure_action",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Simulate webhook event",
          "url": "POST v1/notifications/simulate-event",
          "method": "POST",
          "description": "Use the `/simulate-event` resource to use a sample payload to simulate a webhook event. The events that this call generates only serve to validate the connection to the listener URL and to show how webhook events look. <blockquote><strong>Note:</strong> You can also use the <a href=\\https://developer.paypal.com/developer/webhooksSimulator/\\>Webhooks simulator</a> to simulate webhook events.</blockquote>\\n\\nSimulates a webhook event. In the JSON request body, specify a sample payload.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "resource_version",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show product details",
      "url": "GET v1/catalogs/products/:product_id",
      "method": "GET",
      "description": "Shows details for a product, by ID.",
      "dependencies": [
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create product",
          "url": "POST v1/catalogs/products",
          "method": "POST",
          "description": "Creates a product.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "type",
              "toKey": "type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "category",
              "toKey": "category",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show refund details",
      "url": "GET v2/payments/refunds/:refund_id",
      "method": "GET",
      "description": "Shows details for a refund, by ID.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note_to_payer",
              "toKey": "note_to_payer",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show subscription details",
      "url": "GET v1/billing/subscriptions/:subscription_id",
      "method": "GET",
      "description": "Shows details for a subscription, by ID.",
      "dependencies": [
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show template details",
      "url": "GET v2/invoicing/templates/:template_id",
      "method": "GET",
      "description": "Shows details for a template, by ID.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info_value",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "quantity",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "logo_url",
              "toKey": "logo_url",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_notes",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_recipients",
              "toKey": "additional_recipients",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "field_name",
              "toKey": "field_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "id",
              "toKey": "id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tax_id",
              "toKey": "tax_id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "reference",
              "toKey": "reference",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "website",
              "toKey": "website",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "terms_and_conditions",
              "toKey": "terms_and_conditions",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "website",
              "toKey": "website",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_notes",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "logo_url",
              "toKey": "logo_url",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info_value",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tax_id",
              "toKey": "tax_id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "terms_and_conditions",
              "toKey": "term",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_2",
              "toKey": "address_line_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "label",
              "toKey": "label",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "terms_and_conditions",
              "toKey": "terms_and_conditions",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "national_number",
              "toKey": "national_number",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "additional_notes",
              "toKey": "additional_notes",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "phone_type",
              "toKey": "phone_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "description",
              "toKey": "description",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "additional_recipients",
              "toKey": "additional_recipients",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "tax_id",
              "toKey": "tax_id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "field_name",
              "toKey": "field_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "email_address",
              "toKey": "email_address",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "note",
              "toKey": "note",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "percent",
              "toKey": "percent",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "logo_url",
              "toKey": "logo_url",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "memo",
              "toKey": "memo",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "term_type",
              "toKey": "term_type",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "id",
              "toKey": "id",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "quantity",
              "toKey": "quantity",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "additional_info",
              "toKey": "additional_info",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "website",
              "toKey": "website",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "unit_of_measure",
              "toKey": "unit_of_measure",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "percent",
              "toKey": "value",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Partially update dispute",
          "url": "PATCH v1/customer/disputes/:dispute_id",
          "method": "PATCH",
          "description": "",
          "attributes": [
            {
              "fromKey": "email_address",
              "toKey": "email",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "given_name",
              "toKey": "given_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "postal_code",
              "toKey": "postal_code",
              "type": "int",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "address_line_1",
              "toKey": "address_line_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_2",
              "toKey": "admin_area_2",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "surname",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "given_name",
              "toKey": "recipient_first_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "surname",
              "toKey": "recipient_last_name",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update plan",
          "url": "PATCH v1/billing/plans/:billing_plan_id",
          "method": "PATCH",
          "description": "Updates a plan with the `CREATED` or `ACTIVE` status. For an `INACTIVE` plan, you can make only status updates.<br/>You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>replace</td></tr><tr><td><code>payment_preferences.auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>taxes.percentage</code></td><td>replace</td></tr><tr><td><code>payment_preferences.payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee</code></td><td>replace</td></tr><tr><td><code>payment_preferences.setup_fee_failure_action</code></td><td>replace</td></tr><tr><td><code>name</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update product",
          "url": "PATCH v1/catalogs/products/:product_id",
          "method": "PATCH",
          "description": "Updates a product, by ID. You can patch these attributes and objects:<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>description</code></td><td>add, replace, remove</td></tr><tr><td><code>category</code></td><td>add, replace, remove</td></tr><tr><td><code>image_url</code></td><td>add, replace, remove</td></tr><tr><td><code>home_url</code></td><td>add, replace, remove</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "admin_area_1",
              "toKey": "admin_area_1",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "country_code",
              "toKey": "country_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "rel",
              "toKey": "op",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Show webhook details",
      "url": "GET v1/notifications/webhooks/:webhook_id",
      "method": "GET",
      "description": "Shows details for a webhook, by ID.",
      "dependencies": [
        {
          "name": "Create webhook",
          "url": "POST v1/notifications/webhooks",
          "method": "POST",
          "description": "Subscribes your webhook listener to events. For testing create a sample webhook endpoint on https://pipedream.com/ to receive webhook events sent by PayPal.",
          "attributes": [
            {
              "fromKey": "name",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Simulate webhook event",
      "url": "POST v1/notifications/simulate-event",
      "method": "POST",
      "description": "Use the `/simulate-event` resource to use a sample payload to simulate a webhook event. The events that this call generates only serve to validate the connection to the listener URL and to show how webhook events look. <blockquote><strong>Note:</strong> You can also use the <a href=\\https://developer.paypal.com/developer/webhooksSimulator/\\>Webhooks simulator</a> to simulate webhook events.</blockquote>\\n\\nSimulates a webhook event. In the JSON request body, specify a sample payload.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update webhook",
          "url": "PATCH v1/notifications/webhooks/:webhook_id",
          "method": "PATCH",
          "description": "Updates a webhook to replace webhook fields with new values. Supports only the `replace` operation. Pass a `json_patch` object with `replace` operation and `path`, which is `/url` for a URL or `/event_types` for events. The `value` is either the URL or a list of events.",
          "attributes": [
            {
              "fromKey": "event_type",
              "toKey": "name",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Void authorized payment",
      "url": "POST v2/payments/authorizations/:authorization_id/void",
      "method": "POST",
      "description": "Voids, or cancels, an authorized payment, by ID. You cannot void an authorized payment that has been fully captured.",
      "dependencies": [
        {
          "name": "Capture authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/capture",
          "method": "POST",
          "description": "Captures an authorized payment, by ID.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Capture authorized payment on subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/capture",
          "method": "POST",
          "description": "",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create batch payout",
          "url": "POST v1/payments/payouts",
          "method": "POST",
          "description": "Creates a batch payout. In the JSON request body, pass a `sender_batch_header` and an `items` array. The `sender_batch_header` defines how to handle the payout. The `items` array defines the payout items.<br/>You can make payouts to one or more recipients.<blockquote><strong>Notes:</strong> <ul><li><p>PayPal does not process duplicate payouts. If you specify a <code>sender_batch_id</code> that was used in the last 30 days, the API rejects the request with an error message that shows the duplicate <code>sender_batch_id</code> and includes a HATEOAS link to the original payout with the same <code>sender_batch_id</code>.</p><p>If you receive an HTTP <code>5<i>nn</i></code> status code, you can safely retry the request with the same <code>sender_batch_id</code>.</p></li><li><p>The Payouts API does not support build notation (BN) codes. In a future Payouts release, you can optionally provide BN codes in the <code>PayPal-Partner-Attribution-Id</code> request header.</p><p>For information about the <code>PayPal-Partner-Attribution-Id</code> header, see <a href=\\https://developer.paypal.com/api/rest/requests/#http-request-headers\\>HTTP request headers</a>. To learn about or request a BN code, contact your partner manager or see <a href=\\https://www.paypal.com/us/webapps/mpp/partner-program\\>PayPal Partner Program</a>.</p></li></ul></blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create draft invoice",
          "url": "POST v2/invoicing/invoices",
          "method": "POST",
          "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\\#invoices_send\\>send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create order",
          "url": "POST v2/checkout/orders",
          "method": "POST",
          "description": "Creates an order.<blockquote><strong>Note:</strong> For error handling and troubleshooting, see <a href=\\https://developer.paypal.com/api/rest/reference/orders/v2/errors/#create-order\\>Orders v2 errors</a>.</blockquote>",
          "attributes": [
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            },
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create plan",
          "url": "POST v1/billing/plans",
          "method": "POST",
          "description": "Creates a plan that defines pricing and billing cycle details for subscriptions.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create subscription",
          "url": "POST v1/billing/subscriptions",
          "method": "POST",
          "description": "Creates a subscription.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Create template",
          "url": "POST v2/invoicing/templates",
          "method": "POST",
          "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update invoice",
          "url": "PUT v2/invoicing/invoices/:invoice_id",
          "method": "PUT",
          "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Fully update template",
          "url": "PUT v2/invoicing/templates/:template_id",
          "method": "PUT",
          "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Make offer to resolve dispute",
          "url": "POST v1/customer/disputes/:dispute_id/make-offer",
          "method": "POST",
          "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\\https://developer.paypal.com/api/customer-disputes/v1/#definition-allowed_response_options\\>allowed response options</a> object.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Reauthorize authorized payment",
          "url": "POST v2/payments/authorizations/:authorization_id/reauthorize",
          "method": "POST",
          "description": "Reauthorizes an authorized PayPal account payment, by ID. To ensure that funds are still available, reauthorize a payment after its initial three-day honor period expires. Within the 29-day authorization period, you can issue multiple re-authorizations after the honor period expires.<br/><br/>If 30 days have transpired since the date of the original authorization, you must create an authorized payment instead of reauthorizing the original authorized payment.<br/><br/>A reauthorized payment itself has a new honor period of three days.<br/><br/>You can reauthorize an authorized payment once for up to 115% of the original authorized amount, not to exceed an increase of $75 USD.<br/><br/>Supports only the `amount` request parameter.<blockquote><strong>Note:</strong> This request is currently not supported for Partner use cases.</blockquote>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Record payment for invoice",
          "url": "POST v2/invoicing/invoices/:invoice_id/payments",
          "method": "POST",
          "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Refund captured payment",
          "url": "POST v2/payments/captures/:capture_id/refund",
          "method": "POST",
          "description": "Refunds a captured payment, by ID. For a full refund, include an empty payload in the JSON request body. For a partial refund, include an <code>amount</code> object in the JSON request body.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Revise plan or quantity of subscription",
          "url": "POST v1/billing/subscriptions/:subscription_id/revise",
          "method": "POST",
          "description": "Updates the quantity of the product or service in a subscription. You can also use this method to switch the plan and update the `shipping_amount`, `shipping_address` values for the subscription. This type of update requires the buyer's consent.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Search for invoices",
          "url": "POST v2/invoicing/search-invoices",
          "method": "POST",
          "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            },
            {
              "fromKey": "value",
              "toKey": "value",
              "type": "float",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update pricing",
          "url": "POST v1/billing/plans/:billing_plan_id/update-pricing-schemes",
          "method": "POST",
          "description": "Updates pricing for a plan. For example, you can update a regular billing cycle from $5 per month to $7 per month.",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        },
        {
          "name": "Update subscription",
          "url": "PATCH v1/billing/subscriptions/:subscription_id",
          "method": "PATCH",
          "description": "Updates a subscription which could be in <code>ACTIVE</code> or <code>SUSPENDED</code> status. You can override plan level default attributes by providing customised values for plan path in the patch request.<br /> <ul> <li>You cannot update attributes that have already completed (Example - trial cycles can\u2019t be updated if completed).</li> <li>Once overridden, changes to plan resource will not impact subscription.</li> <li>Any price update will not impact billing cycles within next 10 days (Applicable only for subscriptions funded by PayPal account).</li> </ul> Following are the fields eligible for patch.<table><thead><tr><th>Attribute or object</th><th>Operations</th></tr></thead><tbody><tr><td><code>billing_info.outstanding_balance</code></td><td>replace</td></tr><tr><td><code>custom_id</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.fixed_price</code></td><td>add,replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>pricing_scheme.tiers</code></td><td>replace</td></tr><tr><td><code>plan.billing_cycles[@sequence==n].<br/>total_cycles</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>auto_bill_outstanding</code></td><td>replace</td></tr><tr><td><code>plan.payment_preferences.<br/>payment_failure_threshold</code></td><td>replace</td></tr><tr><td><code>plan.taxes.inclusive</code></td><td>add,replace</td></tr><tr><td><code>plan.taxes.percentage</code></td><td>add,replace</td></tr><tr><td><code>shipping_amount</code></td><td>add,replace</td></tr><tr><td><code>start_time</code></td><td>replace</td></tr><tr><td><code>subscriber.shipping_address</code></td><td>add,replace</td></tr><tr><td><code>subscriber.payment_source (for subscriptions funded<br/>by card payments)</code></td><td>replace</td></tr></tbody></table>",
          "attributes": [
            {
              "fromKey": "currency_code",
              "toKey": "currency_code",
              "type": "string",
              "parameter": "body"
            }
          ]
        }
      ]
    },
    {
      "name": "Send invoice reminder",
      "url": "POST v2/invoicing/invoices/:invoice_id/remind",
      "method": "POST",
      "description": "Sends a reminder to the payer about an invoice, by ID. In the JSON request body, include a `notification` object that defines the subject of the reminder and other details.",
      "dependencies": []
    },
    {
      "name": "Delete webhook",
      "url": "DELETE v1/notifications/webhooks/:webhook_id",
      "method": "DELETE",
      "description": "Deletes a webhook, by ID.",
      "dependencies": []
    },
    {
      "name": "Generate QR code",
      "url": "POST v2/invoicing/invoices/:invoice_id/generate-qr-code",
      "method": "POST",
      "description": "Generates a QR code for an invoice, by ID. The QR code is a PNG image in <a href=\\https://www.base64encode.org/\\>Base64-encoded</a> format that corresponds to the invoice ID. You can generate a QR code for an invoice and add it to a paper or PDF invoice. When customers use their mobile devices to scan the QR code, they are redirected to the PayPal mobile payment flow where they can view the invoice and pay online with PayPal or a credit card. Before you get a QR code, you must <a href=\\#invoices_create\\>create an invoice</a> and <a href=\\#invoices_send\\>send an invoice</a> to move the invoice from a draft to payable state. Do not include an email address if you do not want the invoice emailed.",
      "dependencies": []
    },
    {
      "name": "Verify webhook signature",
      "url": "POST v1/notifications/verify-webhook-signature",
      "method": "POST",
      "description": "Verifies a webhook signature.",
      "dependencies": []
    },
    {
      "name": "Cancel subscription",
      "url": "POST v1/billing/subscriptions/:subscription_id/cancel",
      "method": "POST",
      "description": "Cancels the subscription.",
      "dependencies": []
    },
    {
      "name": "Trigger a sample event",
      "url": "POST v1/catalogs/products",
      "method": "POST",
      "description": "Creates a product.",
      "dependencies": []
    },
    {
      "name": "Generate invoice number",
      "url": "POST v2/invoicing/generate-next-invoice-number",
      "method": "POST",
      "description": "Generates the next invoice number that is available to the merchant. The next invoice number uses the prefix and suffix from the last invoice number and increments the number by one. For example, the next invoice number after `INVOICE-1234` is `INVOICE-1235`.",
      "dependencies": []
    },
    {
      "name": "Update order",
      "url": "PATCH v2/checkout/orders/:order_id",
      "method": "PATCH",
      "description": "Updates an order with a `CREATED` or `APPROVED` status. You cannot update an order with the `COMPLETED` status.<br/><br/>To make an update, you must provide a `reference_id`. If you omit this value with an order that contains only one purchase unit, PayPal sets the value to `default` which enables you to use the path",
      "dependencies": []
    },
    {
      "name": "Deactivate plan",
      "url": "POST v1/billing/plans/:billing_plan_id/deactivate",
      "method": "POST",
      "description": "Deactivates a plan, by ID.",
      "dependencies": []
    },
    {
      "name": "Send message about dispute to other party",
      "url": "POST v1/customer/disputes/:dispute_id/send-message",
      "method": "POST",
      "description": "Sends a message about a dispute, by ID, to the other party in the dispute. Merchants and customers can only send messages if the `dispute_life_cycle_stage` value is `INQUIRY`.",
      "dependencies": []
    },
    {
      "name": "Delete external payment",
      "url": "DELETE v2/invoicing/invoices/:invoice_id/payments/:transaction_id",
      "method": "DELETE",
      "description": "Deletes an external payment, by invoice ID and transaction ID.",
      "dependencies": []
    },
    {
      "name": "Provide supporting information for dispute",
      "url": "POST v1/customer/disputes/:dispute_id/provide-supporting-info",
      "method": "POST",
      "description": "Provides supporting information for a dispute, by ID. A merchant or buyer can make this request for disputes if they find the `provide-supporting-info` link in the HATEOAS links in the list disputes response. The party can provide the supporting information to PayPal to defend themselves only when the `dispute_life_cycle_stage` is `CHARGEBACK`, `PRE_ARBITRATION`, or `ARBITRATION`. They can provide a note that describes their part with details or upload any supporting documents to support their side. The following rules apply to document file types and sizes:<ul><li>The party can upload up to 50 MB of files for a case.</li><li>Individual files must be smaller than 10 MB.</li><li>The supported file formats are JPG, GIF, PNG, and PDF.</li></ul><br/>To make this request, specify the dispute ID in the URI and specify the notes in the JSON request body. This method differs from the provide evidence method which supports only multipart request, where PayPal asks the concerned party for evidence.",
      "dependencies": []
    },
    {
      "name": "Accept offer to resolve dispute",
      "url": "POST v1/customer/disputes/:dispute_id/accept-offer",
      "method": "POST",
      "description": "",
      "dependencies": []
    },
    {
      "name": "Activate subscription",
      "url": "POST v1/billing/subscriptions/:subscription_id/activate",
      "method": "POST",
      "description": "Activates the subscription.",
      "dependencies": []
    },
    {
      "name": "Generate client_token",
      "url": "POST v1/identity/generate-token",
      "method": "POST",
      "description": "",
      "dependencies": []
    },
    {
      "name": "Settle dispute",
      "url": "POST v1/customer/disputes/:dispute_id/adjudicate",
      "method": "POST",
      "description": "",
      "dependencies": []
    },
    {
      "name": "Delete external refund",
      "url": "DELETE v2/invoicing/invoices/:invoice_id/refunds/:transaction_id",
      "method": "DELETE",
      "description": "Deletes an external refund, by invoice ID and transaction ID.",
      "dependencies": []
    },
    {
      "name": "Generate access_token",
      "url": "POST v1/oauth2/token",
      "method": "POST",
      "description": "Shows user profile information. Filters the response by a schema. Supported schema value is `paypalv1.1`.",
      "dependencies": []
    },
    {
      "name": "Send invoice",
      "url": "POST v2/invoicing/invoices/:invoice_id/send",
      "method": "POST",
      "description": "Sends or schedules an invoice, by ID, to be sent to a customer. The action depends on the invoice issue date:<ul><li>If the invoice issue date is current or in the past, sends the invoice immediately.</li><li>If the invoice issue date is in the future, schedules the invoice to be sent on that date.</li></ul>To suppress the merchant's email notification, set the `send_to_invoicer` body parameter to `false`. To send the invoice through a share link and not through PayPal, set the <code>send_to_recipient</code> parameter to <code>false</code> in the <code>notification</code> object. The <code>send_to_recipient</code> parameter does not apply to a future issue date because the invoice is scheduled to be sent through PayPal on that date.<blockquote><strong>Notes:</strong><ul><li>After you send an invoice, resending it has no effect.</li><li>To send a notification for updates, <a href=\\#invoices_update\\>update the invoice</a> and set the <code>send_to_recipient</code> body parameter to <code>true</code>.</li></ul></blockquote>",
      "dependencies": []
    },
    {
      "name": "Escalate dispute to claim",
      "url": "POST v1/customer/disputes/:dispute_id/escalate",
      "method": "POST",
      "description": "Escalates the dispute, by ID, to a PayPal claim. To make this call, the stage in the dispute lifecycle must be `INQUIRY`.",
      "dependencies": []
    },
    {
      "name": "User Info",
      "url": "GET v1/identity/oauth2/userinfo",
      "method": "GET",
      "description": "Shows user profile information. Filters the response by a schema. Supported schema value is `paypalv1.1`.",
      "dependencies": []
    },
    {
      "name": "Terminate access_token",
      "url": "POST v1/oauth2/token/terminate",
      "method": "POST",
      "description": "",
      "dependencies": []
    },
    {
      "name": "Provide evidence",
      "url": "POST v1/customer/disputes/:dispute_id/provide-evidence",
      "method": "POST",
      "description": "Provides evidence for a dispute, by ID. A merchant can provide evidence for disputes with the <code>WAITING_FOR_SELLER_RESPONSE</code> status while customers can provide evidence for disputes with the <code>WAITING_FOR_BUYER_RESPONSE</code> status. Evidence can be a proof of delivery or proof of refund document or notes, which can include logs. A proof of delivery document includes a tracking number while a proof of refund document includes a refund ID. For other evidence type, notes and documents can be given. The following rules apply to document file types and sizes:<ul><li>The merchant can upload up to 50 MB of files for a case.</li><li>Individual files must be smaller than 10 MB.</li><li>The supported file formats are JPG, GIF, PNG, and PDF.</li></ul><br/>To make this request, specify the dispute ID in the URI and specify the evidence in the JSON request body. For information about dispute reasons, see <a href=\\https://developer.paypal.com/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons\\>dispute reasons</a>.",
      "dependencies": []
    },
    {
      "name": "Delete template",
      "url": "DELETE v2/invoicing/templates/:template_id",
      "method": "DELETE",
      "description": "Deletes a template, by ID.",
      "dependencies": []
    },
    {
      "name": "Suspend subscription",
      "url": "POST v1/billing/subscriptions/:subscription_id/suspend",
      "method": "POST",
      "description": "Suspends the subscription.",
      "dependencies": []
    },
    {
      "name": "Update dispute status",
      "url": "POST v1/customer/disputes/:dispute_id/require-evidence",
      "method": "POST",
      "description": "",
      "dependencies": []
    },
    {
      "name": "Delete invoice",
      "url": "DELETE v2/invoicing/invoices/:invoice_id",
      "method": "DELETE",
      "description": "Deletes a draft or scheduled invoice, by ID. Deletes invoices in the draft or scheduled state only. For invoices that have already been sent, you can <a href=\\https://developer.paypal.com/api/invoicing/v2/#invoices_cancel\\>cancel the invoice</a>. After you delete a draft or scheduled invoice, you can no longer use it or show its details. However, you can reuse its invoice number.",
      "dependencies": []
    },
    {
      "name": "Appeal dispute",
      "url": "POST v1/customer/disputes/:dispute_id/appeal",
      "method": "POST",
      "description": "",
      "dependencies": []
    },
    {
      "name": "Acknowledge returned item",
      "url": "POST v1/customer/disputes/:dispute_id/acknowledge-return-item",
      "method": "POST",
      "description": "",
      "dependencies": []
    },
    {
      "name": "Cancel sent invoice",
      "url": "POST v2/invoicing/invoices/:invoice_id/cancel",
      "method": "POST",
      "description": "Cancels a sent invoice, by ID, and, optionally, sends a notification about the cancellation to the payer, merchant, and CC",
      "dependencies": []
    },
    {
      "name": "Activate plan",
      "url": "POST v1/billing/plans/:billing_plan_id/activate",
      "method": "POST",
      "description": "Activates a plan, by ID.",
      "dependencies": []
    },
    {
      "name": "Deny offer to resolve dispute",
      "url": "POST v1/customer/disputes/:dispute_id/deny-offer",
      "method": "POST",
      "description": "",
      "dependencies": []
    }
  ]
}
