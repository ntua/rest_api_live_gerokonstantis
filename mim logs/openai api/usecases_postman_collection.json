{
	"info": {
		"_postman_id": "75d3ceda-e9c7-4942-aa8b-82a23d83b2b5",
		"name": "ChatGPT API",
		"description": "Welcome to the OpenAI API Postman Collection! This collection provides a comprehensive set of examples to help you get started with the OpenAI API. Easily walkthrough multiple usecases, API Capabilities, and OpenAI's assistant APIs.\n\n> **Note**: This isn't OpenAI's official collection. Learn how to contribute to this workspace and collections [here](https://learning.postman.com/docs/collaborating-in-postman/using-version-control/version-control-overview/#creating-pull-requests). \n  \n\nThe OpenAI API provides a simple interface for developers to create an intelligence layer in their applications powered by OpenAI's state-of-the-art models. The [Chat Completions ](https://www.postman.com/devrel/openai/request/xqcsuot/chat-completions?action=share&source=copy-link&creator=21505573&ctx=documentation) endpoint powers ChatGPT and provides a straightforward way to generate text responses.\n\n# Getting Started\n\nTo get started with working with OpenAI APIs, you need to first be authorized to access their APIs.\n\n### **Step 1: Setup your account**\n\nCreate an [OpenAI account](https://platform.openai.com/signup) or [sign in](https://platform.openai.com/login) to an exisitng one.\n\n### Step 2: Fetch your API key\n\nNext, navigate to the [API keys page](https://platform.openai.com/account/api-keys) and click on the \"Create new secret key\" button.\n\nGive your key a name, select a project, and configure all relevant permissions for this API key.\n\n<img src=\"https://content.pstmn.io/39a27206-d751-40b3-b9bd-2f7287aea9b6/U2NyZWVuc2hvdCAyMDI0LTA4LTAyIGF0IDcuNDcuMDLigK9QTS5wbmc=\">\n\nCreate the secret key.\n\n<img src=\"https://content.pstmn.io/ea46e770-5e33-45fd-ad85-e7b26eb387e4/U2NyZWVuc2hvdCAyMDI0LTA4LTAyIGF0IDcuNTIuMDLigK9QTS5wbmc=\">\n\nOnce the Secret Key is created, copy it to your clipboard by clicking the copy button and select \"Done\" to close the open prompt.\n\n### Step 3: Configure the API Key in Postman\n\nPostman provides you with a Vault that let's you store sensitive data locally. Data stored in this vault is not synced with Postman Cloud and can only be accessed in your local Postman Instance.\n\n> We recommend using [Postman Vault](https://learning.postman.com/docs/sending-requests/postman-vault/postman-vault-secrets/) to store sensitive data. \n  \n\nStore your Secret Key in a Postman Vault. A reference to a secret `{{vault:openai-secret-key}}}` has been added to the [collection authorization tab](https://www.postman.com/devrel/openai/collection/k25n3c8/chatgpt-api?tab=authorization) as a Bearer token. You can use this variable name in your vault or update the variable in the authorization tab accordingly.\n\n# ChatGPT API Use Cases\n\n- [Text Generation](https://www.postman.com/devrel/openai/request/xqcsuot/chat-completions?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- [Function Calling](https://www.postman.com/devrel/openai/request/x65tdyb/chat-completions-with-function-calling?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- Build a simple FAQ system\n    \n    - [Create Embeddings of FAQ Answers](https://www.postman.com/devrel/openai/request/tni6s2k/create-embeddings-of-faq-answers?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Create Embedding of User Input](https://www.postman.com/devrel/openai/request/mmo8o9u/create-embedding-of-user-input?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n\n# ChatGPT API Capabilities\n\n- [Chat Completions](https://www.postman.com/devrel/openai/request/z1m5sfw/chat-completions?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- [Embeddings](https://www.postman.com/devrel/openai/request/o51r0bp/embeddings?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- Fine Tunning\n    \n    - [Upload Training File](https://www.postman.com/devrel/openai/request/aat4yv1/upload-training-file?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Create a Fine Tuning Job](https://www.postman.com/devrel/openai/request/lyz6y8a/create-fine-tuning-job?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Enable Weights and Biases Integrations](https://www.postman.com/devrel/openai/request/ndutt0y/enable-weights-and-biases-integration?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [List Fine Tuning Jobs](https://www.postman.com/devrel/openai/request/l2zxkvt/list-fine-tuning-jobs?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [List Fine Tuning Events](https://www.postman.com/devrel/openai/request/fp95wua/list-fine-tuning-events?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [List Fine Tuning Checkpoints](https://www.postman.com/devrel/openai/request/33whmks/list-fine-tuning-checkpoints?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Retrieve Fine Tuning Jobs](https://www.postman.com/devrel/openai/request/kbdjtu8/retrieve-fine-tuning-jobs?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Cancel Fine Tuning Jobs](https://www.postman.com/devrel/openai/request/q0quai9/cancel-fine-tuning-jobs?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n- Batch API Requests\n    \n    - [Get Batches](https://www.postman.com/devrel/openai/request/usyj5nr/get-batches?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Retrieve Batch](https://www.postman.com/devrel/openai/request/0toz44d/retrieve-batch?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Cancel Batch](https://www.postman.com/devrel/openai/request/c9zmbrq/cancel-batch?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [List Batch](https://www.postman.com/devrel/openai/request/ayowh6p/list-batch?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Create Image Variation](https://www.postman.com/devrel/openai/request/6ffvuh8/create-image-variation?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n- Files\n    \n    - [Upload Files](https://www.postman.com/devrel/openai/request/rixfdg5/upload-files?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [List Files](https://www.postman.com/devrel/openai/request/xgnko2p/list-files?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Retrieve File](https://www.postman.com/devrel/openai/request/1e1ogge/retrieve-file?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Delete File](https://www.postman.com/devrel/openai/request/e4ogrmh/delete-file?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Retrieve File Contents](https://www.postman.com/devrel/openai/request/seq7fpr/retrieve-file-contents?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n- Image Generation\n    \n    - [Generate Image](https://www.postman.com/devrel/openai/request/riub8s3/generate-image?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Create Image Edit](https://www.postman.com/devrel/openai/request/8c7f7d8/create-image-edit?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n- Models\n    \n    - [List Models](https://www.postman.com/devrel/openai/request/1p8b6v6/list-models?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Retrieve Models](https://www.postman.com/devrel/openai/request/ns0dwtr/retrieve-models?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Delete Fine Tuned Model](https://www.postman.com/devrel/openai/request/0ketmr9/delete-fine-tuned-model?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n- [Moderations](https://www.postman.com/devrel/openai/request/6quoxk9/moderations?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n\n# ChatGPT Assistants API\n\n- [Create Assistant](https://www.postman.com/devrel/openai/request/clib2ud/create-assistant?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- [List Assistant](https://www.postman.com/devrel/openai/request/vvly6fi/list-assistants?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- [Retrieve Assistants](https://www.postman.com/devrel/openai/request/ijtxfc3/retrieve-assistants?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- [Modify Assistants](https://www.postman.com/devrel/openai/request/13183464-f11b5312-5201-4af0-9733-cf30662b2c28?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- [Delete Assistants](https://www.postman.com/devrel/openai/request/13183464-21b031b2-6a14-4ea8-9cec-72571edeeaef?action=share&source=copy-link&creator=5078742&ctx=documentation)\n    \n- Threads\n    \n    - [Create Thread](https://www.postman.com/devrel/openai/request/7i3zquh/create-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Retrieve Thread](https://www.postman.com/devrel/openai/request/13183464-1afecebb-dcd8-422d-9134-3dfda0a37696?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Modify Thread](https://www.postman.com/devrel/openai/request/13183464-d2a14163-8517-4da7-acc9-c1c5ed8dd480?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Delete Thread](https://www.postman.com/devrel/openai/request/13183464-9f769a5b-58d0-4a52-b7c9-d1772d2989ab?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - Messages\n        \n        - [Create Message in a Thread](https://www.postman.com/devrel/openai/request/yr8dk7b/create-message-in-a-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [List Messages in a Thread](https://www.postman.com/devrel/openai/request/v5529lf/list-messages-in-a-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Get Message in Thread](https://www.postman.com/devrel/openai/request/7cql7ma/get-message-in-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Modify Message in Thread](https://www.postman.com/devrel/openai/request/45p5h7p/modify-message-in-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Delete Message in Thread](https://www.postman.com/devrel/openai/request/13183464-896019ed-3e96-4410-9c20-316519ed771c?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n    - Runs\n        \n        - [Create Thread and Run](https://www.postman.com/devrel/openai/request/ox2r344/create-thread-and-run?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Create Run](https://www.postman.com/devrel/openai/request/kivksuw/create-run?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [List Run](https://www.postman.com/devrel/openai/request/13183464-896b5cc4-095f-4cfd-8991-cb0bf376dd68?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Get Run](https://www.postman.com/devrel/openai/request/13183464-aca95589-be99-433e-8ade-8da750cd5880?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Modify Run](https://www.postman.com/devrel/openai/request/13183464-42914896-b918-4292-8f42-f1dbbabce670?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Submit Tool Outputs](https://www.postman.com/devrel/openai/request/13183464-2acc62e5-f7a3-46aa-b280-c0a437deaddd?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Cancel Run](https://www.postman.com/devrel/openai/request/13183464-41bf75a5-8858-4065-b352-e9b01e5ed614?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [List Run Steps](https://www.postman.com/devrel/openai/request/13183464-b6f2c46f-6452-4537-9abb-3399f018129a?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Get Run Steps](https://www.postman.com/devrel/openai/request/13183464-b4b82005-2019-4654-b366-4a91e2403c5b?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Create Thread](https://www.postman.com/devrel/openai/request/7i3zquh/create-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Retrieve Thread](https://www.postman.com/devrel/openai/request/3hxjbdy/retrieve-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Modify Thread](https://www.postman.com/devrel/openai/request/l58xz2x/modify-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Delete Thread](https://www.postman.com/devrel/openai/request/6bce2v2/delete-thread?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n- Vector Store\n    \n    - [Create Vector Store](https://www.postman.com/devrel/openai/request/4f23w75/create-vector-store?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [List Vector Stores](https://www.postman.com/devrel/openai/request/13183464-7b8692b4-3cba-4cd5-8c95-16f522ce1fc7?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Retrieve Vector Store](https://www.postman.com/devrel/openai/request/13183464-741392e9-4db0-4eaf-a895-c032fdf25e4c?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Modify Vector Store](https://www.postman.com/devrel/openai/request/13183464-b65844bb-07fc-489b-b8c4-10d2a1be4b49?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - [Delete Vector Store](https://www.postman.com/devrel/openai/request/13183464-e5e58ddb-127b-491b-9dd9-8cd4d942368a?action=share&source=copy-link&creator=5078742&ctx=documentation)\n        \n    - Vectore Store Files\n        \n        - [Create Vectore Store File](https://www.postman.com/devrel/openai/request/cfi9sn5/create-vector-store-file?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [List Vector Store File](https://www.postman.com/devrel/openai/request/mu44w08/list-vector-store-file?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Get Vector Store File](https://www.postman.com/devrel/openai/request/gz7wx0x/get-vector-store-file?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - [Delete Vector Store File](https://www.postman.com/devrel/openai/request/13183464-c2986e32-db57-4cc6-8c1c-cc5f08a35586?action=share&source=copy-link&creator=5078742&ctx=documentation)\n            \n        - Batches\n            \n            - [Vector Store File Batch](https://www.postman.com/devrel/openai/request/o8eu86g/vector-store-file-batch?action=share&source=copy-link&creator=5078742&ctx=documentation)\n                \n            - [Get Vector Store File Batch](https://www.postman.com/devrel/openai/request/13183464-94431874-72e3-4516-8447-28570283b47b?action=share&source=copy-link&creator=5078742&ctx=documentation)\n                \n            - [Cancel Vectore Store File Batch](https://www.postman.com/devrel/openai/request/13183464-c31b8300-f4f1-45a9-bb93-2b87401989d0?action=share&source=copy-link&creator=5078742&ctx=documentation)\n                \n            - [List Vector Stores in a Files Batch](https://www.postman.com/devrel/openai/request/13183464-a6ed0a7d-3334-41cb-a968-431b1baf0762?action=share&source=copy-link&creator=5078742&ctx=documentation)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34374105",
		"_collection_link": "https://ntua-softlab.postman.co/workspace/DG-API-ANALYSIS~4e247560-4f20-4d15-a5c9-8f415072234c/collection/34374105-75d3ceda-e9c7-4942-aa8b-82a23d83b2b5?action=share&source=collection_link&creator=34374105"
	},
	"item": [
		{
			"name": "Use case 1 : prompts",
			"item": [
				{
					"name": "List Models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, object, created, and owned_by\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
									"  ",
									"  responseData.data.forEach(function(item) {",
									"    pm.expect(item).to.have.property('id');",
									"    pm.expect(item).to.have.property('object');",
									"    pm.expect(item).to.have.property('created');",
									"    pm.expect(item).to.have.property('owned_by');",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Data array contains at least one element\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string and created is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");",
									"        pm.expect(item.created).to.be.a('number').and.to.be.at.least(0, \"Created should be a non-negative integer\");",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Object property must be a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.object).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Object should be a non-empty string\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"model\", jsonData.data[1].id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/1/v1/models",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.have.property('id');",
									"  pm.expect(responseData).to.have.property('object');",
									"  pm.expect(responseData).to.have.property('created');",
									"  pm.expect(responseData).to.have.property('owned_by');",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Created is a valid timestamp\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.created).to.match(/^\\d{10}$/);",
									"});",
									"",
									"",
									"pm.test(\"Owned_by is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.owned_by).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Owned_by should be a non-empty string\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/1/v1/models/{{model}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"models",
								"{{model}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Chat Completions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let messages = [",
									"      {",
									"        \"role\": \"system\",",
									"        \"content\": \"You are a helpful assistant.\"",
									"      },",
									"      {",
									"        \"role\": \"user\",",
									"        \"content\": \"Who won the world series in 2020?\"",
									"      },",
									"      {",
									"        \"role\": \"assistant\",",
									"        \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"",
									"      },",
									"      {",
									"        \"role\": \"user\",",
									"        \"content\": \"Where was it played?\"",
									"      }",
									"    ];",
									"",
									"pm.collectionVariables.set('messages', JSON.stringify(messages));",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Validate the choices array\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.choices).to.be.an('array').that.is.not.empty;",
									"    responseData.choices.forEach(function(choice) {",
									"        pm.expect(choice).to.be.an('object');",
									"        pm.expect(choice.index).to.exist.and.to.be.a('number');",
									"        pm.expect(choice.message).to.exist.and.to.be.an('object');",
									"        pm.expect(choice.finish_reason).to.exist.and.to.be.a('string');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Created field is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.created).to.be.a('number').and.to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Model field should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.model).to.exist.and.to.not.be.empty;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{vault:OpenAIKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"{{model}}\",\n    \"messages\": {{messages}} \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/1/v1/chat/completions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"chat",
								"completions"
							]
						}
					},
					"response": [
						{
							"name": "Chat Completions",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{vault:OpenAIKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"{{model}}\",\n    \"messages\": {{messages}} \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.openai.com/v1/chat/completions",
									"protocol": "https",
									"host": [
										"api",
										"openai",
										"com"
									],
									"path": [
										"v1",
										"chat",
										"completions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 17 Jun 2024 06:23:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "openai-organization",
									"value": "user-3wdwkjaeznoulp9fnvi35lbh"
								},
								{
									"key": "openai-processing-ms",
									"value": "587"
								},
								{
									"key": "openai-version",
									"value": "2020-10-01"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "x-ratelimit-limit-requests",
									"value": "10000"
								},
								{
									"key": "x-ratelimit-limit-tokens",
									"value": "60000"
								},
								{
									"key": "x-ratelimit-remaining-requests",
									"value": "9999"
								},
								{
									"key": "x-ratelimit-remaining-tokens",
									"value": "59946"
								},
								{
									"key": "x-ratelimit-reset-requests",
									"value": "8.64s"
								},
								{
									"key": "x-ratelimit-reset-tokens",
									"value": "54ms"
								},
								{
									"key": "x-request-id",
									"value": "req_ec576d7c4563894a83067c060d5c04a2"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "8950f4169e38f9d4-SJC"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"chatcmpl-9b04PNw9WxrCYkXRWJXcOyH5My4BG\",\n    \"object\": \"chat.completion\",\n    \"created\": 1718605433,\n    \"model\": \"gpt-3.5-turbo-0125\",\n    \"choices\": [\n        {\n            \"index\": 0,\n            \"message\": {\n                \"role\": \"assistant\",\n                \"content\": \"The 2020 World Series was played at Globe Life Field in Arlington, Texas.\"\n            },\n            \"logprobs\": null,\n            \"finish_reason\": \"stop\"\n        }\n    ],\n    \"usage\": {\n        \"prompt_tokens\": 53,\n        \"completion_tokens\": 17,\n        \"total_tokens\": 70\n    },\n    \"system_fingerprint\": null\n}"
						}
					]
				},
				{
					"name": "Chat Completions with Function Calling",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let messages = [",
									"      {",
									"        \"role\": \"system\",",
									"        \"content\": \"You are a helpful assistant.\"",
									"      },",
									"      {",
									"        \"role\": \"user\",",
									"        \"content\": \"Who won the world series in 2020?\"",
									"      },",
									"      {",
									"        \"role\": \"assistant\",",
									"        \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"",
									"      },",
									"      {",
									"        \"role\": \"user\",",
									"        \"content\": \"What was the weather?\"",
									"      }",
									"    ];",
									"",
									"pm.collectionVariables.set('messages', messages);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Validate the structure of the response object\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.id).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.object).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.created).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.model).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.choices).to.exist.and.to.be.an('array');",
									"    responseData.choices.forEach(function(choice) {",
									"        pm.expect(choice).to.be.an('object');",
									"        pm.expect(choice.index).to.exist.and.to.be.a('number');",
									"        pm.expect(choice.message).to.exist.and.to.be.an('object');",
									"        pm.expect(choice.message.role).to.exist.and.to.be.a('string');",
									"        // ... continue with other checks for choice.message properties",
									"        pm.expect(choice.tool_calls).to.exist.and.to.be.an('array');",
									"        // ... continue with checks for tool_calls properties",
									"    });",
									"    pm.expect(responseData.usage).to.exist.and.to.be.an('object');",
									"    pm.expect(responseData.usage.prompt_tokens).to.exist.and.to.be.a('number');",
									"    // ... continue with other checks for usage properties",
									"    pm.expect(responseData.system_fingerprint).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Choices array is present and contains expected number of elements\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.choices).to.exist.and.to.be.an('array').with.lengthOf(1);",
									"});",
									"",
									"",
									"pm.test(\"Ensure that 'tool_calls' array within 'choices' contains the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.choices).to.be.an('array');",
									"    ",
									"    responseData.choices.forEach(choice => {",
									"        if (choice.message && choice.message.tool_calls) {",
									"            choice.message.tool_calls.forEach(toolCall => {",
									"                pm.expect(toolCall.id).to.exist;",
									"                pm.expect(toolCall.type).to.exist;",
									"                pm.expect(toolCall.function).to.exist;",
									"            });",
									"        }",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Usage object contains expected fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.usage).to.be.an('object');",
									"    pm.expect(responseData.usage).to.have.property('prompt_tokens');",
									"    pm.expect(responseData.usage).to.have.property('completion_tokens');",
									"    pm.expect(responseData.usage).to.have.property('total_tokens');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{vault:OpenAIKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"{{model}}\",\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": \"What is the weather in San Francisco?\"\n        }\n    ],\n    \"tools\": [\n        {\n            \"type\": \"function\",\n            \"function\": {\n                \"name\": \"get_current_weather\",\n                \"description\": \"Get the current weather\",\n                \"parameters\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"location\": {\n                            \"type\": \"string\",\n                            \"description\": \"The city and state, e.g. San Francisco, CA\"\n                        },\n                        \"format\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"celsius\",\n                                \"fahrenheit\"\n                            ],\n                            \"description\": \"The temperature unit to use. Infer this from the users location.\"\n                        }\n                    },\n                    \"required\": [\n                        \"location\"\n                    ]\n                }\n            }\n        }\n    ],\n    \"tool_choice\": \"required\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/1/v1/chat/completions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"chat",
								"completions"
							]
						}
					},
					"response": [
						{
							"name": "Chat Completions with Function Calling",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{vault:OpenAIKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"{{model}}\",\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": \"What is the weather in San Francisco?\"\n        }\n    ],\n    \"tools\": [\n        {\n            \"type\": \"function\",\n            \"function\": {\n                \"name\": \"get_current_weather\",\n                \"description\": \"Get the current weather\",\n                \"parameters\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"location\": {\n                            \"type\": \"string\",\n                            \"description\": \"The city and state, e.g. San Francisco, CA\"\n                        },\n                        \"format\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"celsius\",\n                                \"fahrenheit\"\n                            ],\n                            \"description\": \"The temperature unit to use. Infer this from the users location.\"\n                        }\n                    },\n                    \"required\": [\n                        \"location\"\n                    ]\n                }\n            }\n        }\n    ],\n    \"tool_choice\": \"required\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.openai.com/v1/chat/completions",
									"protocol": "https",
									"host": [
										"api",
										"openai",
										"com"
									],
									"path": [
										"v1",
										"chat",
										"completions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 17 Jun 2024 06:23:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "openai-organization",
									"value": "user-3wdwkjaeznoulp9fnvi35lbh"
								},
								{
									"key": "openai-processing-ms",
									"value": "649"
								},
								{
									"key": "openai-version",
									"value": "2020-10-01"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "x-ratelimit-limit-requests",
									"value": "10000"
								},
								{
									"key": "x-ratelimit-limit-tokens",
									"value": "60000"
								},
								{
									"key": "x-ratelimit-remaining-requests",
									"value": "9999"
								},
								{
									"key": "x-ratelimit-remaining-tokens",
									"value": "59973"
								},
								{
									"key": "x-ratelimit-reset-requests",
									"value": "8.64s"
								},
								{
									"key": "x-ratelimit-reset-tokens",
									"value": "27ms"
								},
								{
									"key": "x-request-id",
									"value": "req_63ab6c79dd2331c08fcf1768d8f16890"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Set-Cookie",
									"value": "__cf_bm=UJExblUU9v1F38bRsx6_EE0oGRgg.lxlH4RoADFiLkE-1718605392-1.0.1.1-WXc1ciRmKxA_kqZCiLtMFyKXabMrvhFDg6qBTd_psxwq_7Oo7eX7PHvy.o7usd7A9mP2ToT97uwuqDLcpiv.bA; path=/; expires=Mon, 17-Jun-24 06:53:12 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None"
								},
								{
									"key": "Set-Cookie",
									"value": "_cfuvid=U_HJGaUnd7v0etZVuA0lnttcaVf.N8Jsdp947aHE4Pc-1718605392310-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "8950f30dfeaef9d4-SJC"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"chatcmpl-9b03jdpTlePrfNUed4Oih8obtOuEC\",\n    \"object\": \"chat.completion\",\n    \"created\": 1718605391,\n    \"model\": \"gpt-3.5-turbo-0125\",\n    \"choices\": [\n        {\n            \"index\": 0,\n            \"message\": {\n                \"role\": \"assistant\",\n                \"content\": null,\n                \"tool_calls\": [\n                    {\n                        \"id\": \"call_H5zLfaW6i3LWQRqUAxuSJ8qS\",\n                        \"type\": \"function\",\n                        \"function\": {\n                            \"name\": \"get_current_weather\",\n                            \"arguments\": \"{\\\"location\\\":\\\"San Francisco\\\"}\"\n                        }\n                    }\n                ]\n            },\n            \"logprobs\": null,\n            \"finish_reason\": \"stop\"\n        }\n    ],\n    \"usage\": {\n        \"prompt_tokens\": 94,\n        \"completion_tokens\": 14,\n        \"total_tokens\": 108\n    },\n    \"system_fingerprint\": null\n}"
						}
					]
				},
				{
					"name": "Create Embeddings of FAQ Answers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let context = [",
									"    \"You can pay using credit card, PayPal, or bank transfer.\",",
									"    \"You can reset your password by clicking 'Forgot password?' at the login screen.\",",
									"    \"You may return products within 30 days for a full refund.\",",
									"    \"Track your order by logging into your account and visiting the order history page.\"",
									"];",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseData = pm.response.json();",
									"//usually these can be stored in a vector database ",
									"pm.collectionVariables.set(\"storedEmbeddings\", JSON.stringify(responseData.data.map(embed => embed.embedding)));",
									"pm.test(\"Response Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Data object and its properties are valid\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.exist.and.to.be.an('array');",
									"    ",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item).to.be.an('object');",
									"        pm.expect(item.index).to.exist.and.to.be.a('number');",
									"        pm.expect(item.embedding).to.exist.and.to.be.an('array');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Index is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.data).to.be.an('array');",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.index).to.be.a('number');",
									"        pm.expect(item.index).to.be.at.least(0);",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Embedding array is present and contains at least one element\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.data).to.be.an('array');",
									"  pm.expect(responseData.data).to.have.lengthOf.at.least(1, \"Embedding array should contain at least one element\");",
									"});",
									"",
									"",
									"pm.test(\"Usage object and its properties are present\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.usage).to.exist.and.to.be.an('object');",
									"  pm.expect(responseData.usage.prompt_tokens).to.exist.and.to.be.a('number');",
									"  pm.expect(responseData.usage.total_tokens).to.exist.and.to.be.a('number');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{vault:OpenAIKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"{{inputStringAnswer}}\",\n    \"model\": \"text-embedding-3-small\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/1/v1/embeddings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"embeddings"
							]
						}
					},
					"response": [
						{
							"name": "Create Embeddings of FAQ Answers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{vault:OpenAIKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"{{inputString}}\",\n    \"model\": \"text-embedding-3-small\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.openai.com/v1/embeddings",
									"protocol": "https",
									"host": [
										"api",
										"openai",
										"com"
									],
									"path": [
										"v1",
										"embeddings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 17 Jun 2024 06:24:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "openai-model",
									"value": "text-embedding-3-small"
								},
								{
									"key": "openai-organization",
									"value": "user-3wdwkjaeznoulp9fnvi35lbh"
								},
								{
									"key": "openai-processing-ms",
									"value": "20"
								},
								{
									"key": "openai-version",
									"value": "2020-10-01"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "x-ratelimit-limit-requests",
									"value": "3000"
								},
								{
									"key": "x-ratelimit-limit-tokens",
									"value": "1000000"
								},
								{
									"key": "x-ratelimit-remaining-requests",
									"value": "2999"
								},
								{
									"key": "x-ratelimit-remaining-tokens",
									"value": "999986"
								},
								{
									"key": "x-ratelimit-reset-requests",
									"value": "20ms"
								},
								{
									"key": "x-ratelimit-reset-tokens",
									"value": "0s"
								},
								{
									"key": "x-request-id",
									"value": "req_c39ce5660b7d682108ff2160639bdd76"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "8950f49c39c6f9d4-SJC"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"object\": \"list\",\n    \"data\": [\n        {\n            \"object\": \"embedding\",\n            \"index\": 0,\n            \"embedding\": [\n                -0.0142941205,\n                0.019290362,\n                -0.052887026,\n                -0.031025432,\n                -0.009468484,\n                -0.035729207,\n                -0.02248308,\n                0.05444683,\n                0.010315408,\n                -0.0033267646,\n                0.025858589,\n                -0.0063306014,\n                0.007634498,\n                -0.043138266,\n                0.016901914,\n                0.011192796,\n                -0.013404546,\n                -0.014623141,\n                -0.07097098,\n                -0.010077782,\n                0.00539533,\n                0.030001812,\n                0.044527464,\n                -0.041944046,\n                -0.06292825,\n                0.046964657,\n                -0.04165158,\n                -0.02434753,\n                0.013550778,\n                -0.036338508,\n                0.0077746366,\n                -0.024566878,\n                0.009998573,\n                -0.0061843703,\n                -0.034096293,\n                -0.00094136473,\n                0.017864604,\n                0.041578464,\n                0.028661357,\n                0.020253051,\n                -0.010656614,\n                0.016792241,\n                0.0063549737,\n                -0.01164977,\n                0.032609604,\n                0.0034425312,\n                -0.028417638,\n                0.041334745,\n                0.020021517,\n                0.027491506,\n                -0.0036375064,\n                0.037776448,\n                -0.024786225,\n                0.030708596,\n                -0.029587489,\n                0.0135995215,\n                0.051327225,\n                0.019936217,\n                0.027247787,\n                -0.027247787,\n                0.06546293,\n                -0.038288258,\n                -0.026589746,\n                0.024213485,\n                -0.004651987,\n                -0.07579662,\n                0.012722133,\n                0.044235002,\n                -0.0047555673,\n                -0.051522203,\n                0.009559879,\n                0.024323158,\n                0.00023781645,\n                -0.049767423,\n                0.009748761,\n                -0.009754854,\n                -0.012319997,\n                -0.029806836,\n                0.020594258,\n                -0.0030068834,\n                -0.055957887,\n                -0.028515127,\n                -0.0093344385,\n                -0.019339105,\n                -0.024627807,\n                -0.029124424,\n                -0.051960897,\n                0.05556794,\n                -0.007159246,\n                0.018632319,\n                -0.007055666,\n                0.061075985,\n                0.036216646,\n                0.023701675,\n                0.010510383,\n                0.008816536,\n                -0.041529723,\n                0.011850838,\n                -0.0228121,\n                0.067607656,\n                0.06897248,\n                0.00008720571,\n                0.009383182,\n                0.0082437955,\n                0.034559358,\n                -0.05459306,\n                -0.014525654,\n                -0.011954418,\n                -0.016231688,\n                -0.032268398,\n                -0.054105625,\n                -0.081645876,\n                -0.009724389,\n                0.011789908,\n                0.016597265,\n                0.026199795,\n                -0.054495573,\n                -0.022056572,\n                -0.010778474,\n                -0.051473457,\n                -0.016024526,\n                -0.006744924,\n                -0.013209571,\n                -0.02230029,\n                -0.009876713,\n                -0.013136456,\n                -0.037971422,\n                0.016182942,\n                -0.06063729,\n                -0.013818868,\n                0.010327593,\n                -0.04828074,\n                0.015147137,\n                -0.013562963,\n                -0.0036375064,\n                0.017694,\n                -0.05712774,\n                -0.03268272,\n                -0.03509554,\n                -0.009584251,\n                0.0073785936,\n                0.020911092,\n                0.03290207,\n                -0.039287508,\n                -0.03743524,\n                -0.033389505,\n                -0.021240113,\n                0.000046054327,\n                -0.0058005126,\n                -0.029928695,\n                -0.042870175,\n                -0.054690547,\n                -0.025687985,\n                -0.011942232,\n                -0.011521817,\n                0.0146109555,\n                0.056542814,\n                0.03558298,\n                -0.0048317295,\n                0.0176087,\n                -0.014818117,\n                0.009773132,\n                -0.04740335,\n                0.00064814027,\n                -0.004962729,\n                0.003616181,\n                -0.019546265,\n                0.005477585,\n                -0.029563118,\n                -0.030586738,\n                0.047988277,\n                0.021020766,\n                -0.033121414,\n                0.0020152517,\n                0.031805333,\n                -0.0056999787,\n                0.03741087,\n                -0.02121574,\n                -0.030903572,\n                -0.022470893,\n                -0.028783217,\n                0.029416885,\n                0.032049052,\n                0.009474577,\n                -0.016572893,\n                -0.019290362,\n                -0.020923277,\n                0.018193625,\n                -0.049767423,\n                0.040311128,\n                0.009779226,\n                0.010412895,\n                -0.03909253,\n                -0.025127431,\n                -0.022836473,\n                -0.030513622,\n                -0.007476081,\n                -0.04742772,\n                -0.0133801745,\n                0.03187845,\n                0.02028961,\n                -0.033023927,\n                -0.0070312936,\n                0.024749666,\n                0.013099898,\n                -0.04686717,\n                -0.0975851,\n                -0.020996394,\n                -0.025054315,\n                -0.03563172,\n                0.058248848,\n                -0.009974201,\n                0.0029642326,\n                0.005757862,\n                -0.0052064476,\n                -0.012563716,\n                -0.0014478433,\n                0.023726046,\n                0.034681216,\n                -0.011393865,\n                -0.022202803,\n                0.008670304,\n                0.0093344385,\n                -0.004977961,\n                0.0027905828,\n                0.038507607,\n                -0.010906426,\n                -0.022214988,\n                0.004572778,\n                -0.055811655,\n                -0.0067510167,\n                0.040554844,\n                0.009553785,\n                0.0069459924,\n                -0.0078111948,\n                -0.010784566,\n                0.011034379,\n                0.012057998,\n                0.029051308,\n                -0.014123517,\n                -0.019363476,\n                0.0008469236,\n                0.017559955,\n                -0.004962729,\n                0.058492564,\n                -0.030757342,\n                0.0012064092,\n                -0.027467133,\n                0.066584036,\n                0.011022192,\n                -0.013136456,\n                -0.061953377,\n                -0.01351422,\n                -0.059174977,\n                0.014111332,\n                0.0011942232,\n                -0.013160828,\n                0.025663612,\n                0.026979696,\n                -0.0040183174,\n                -0.008371748,\n                -0.020472398,\n                0.026151052,\n                -0.011923953,\n                -0.007226269,\n                -0.0065743206,\n                0.029148795,\n                0.020996394,\n                -0.05186341,\n                0.045161135,\n                -0.036972176,\n                0.008000077,\n                0.043381985,\n                -0.005629909,\n                -0.015841737,\n                0.037581474,\n                -0.0403355,\n                0.04087168,\n                -0.042967662,\n                -0.0038202957,\n                -0.009986387,\n                -0.033023927,\n                -0.0076405914,\n                -0.043771937,\n                -0.035972927,\n                0.012393112,\n                -0.02139853,\n                -0.01902227,\n                0.009578157,\n                0.009547693,\n                -0.0060411855,\n                0.03341388,\n                -0.00095278904,\n                -0.00573349,\n                0.001162235,\n                0.029709348,\n                0.040798564,\n                0.010047317,\n                0.021166997,\n                0.0213376,\n                0.041944046,\n                0.025809845,\n                0.03151287,\n                0.0005826408,\n                0.009084627,\n                0.04535611,\n                -0.052887026,\n                -0.0012574379,\n                -0.0130633395,\n                0.01818144,\n                -0.029904325,\n                0.016828798,\n                0.028880704,\n                -0.010833311,\n                -0.03295081,\n                -0.040676706,\n                0.028003316,\n                -0.056786533,\n                -0.03689906,\n                -0.052448332,\n                0.033121414,\n                -0.020850163,\n                0.040701076,\n                0.01095517,\n                0.0051241927,\n                -0.076137826,\n                0.03831263,\n                0.036167905,\n                0.021800667,\n                -0.008073193,\n                0.03843449,\n                0.019387849,\n                0.021374159,\n                -0.0011409096,\n                -0.031707846,\n                0.04789079,\n                0.04291892,\n                -0.03290207,\n                0.01922943,\n                0.00363446,\n                0.0493531,\n                -0.021288857,\n                -0.044015657,\n                -0.0026656769,\n                -0.005182076,\n                -0.046501588,\n                0.060198598,\n                0.012843993,\n                0.007884311,\n                0.012514972,\n                -0.034413125,\n                0.005483678,\n                -0.0013008503,\n                0.026882209,\n                -0.0064524612,\n                0.0015750342,\n                0.0019375662,\n                -0.004383896,\n                -0.02856387,\n                0.021118253,\n                0.025907332,\n                0.03767896,\n                0.012953666,\n                -0.00030293514,\n                -0.028466381,\n                0.0485732,\n                0.021166997,\n                0.013867612,\n                -0.010120433,\n                -0.017145634,\n                -0.00057388213,\n                0.024176927,\n                -0.013343616,\n                0.029611861,\n                -0.054788038,\n                -0.019400034,\n                0.0066291573,\n                -0.0008789117,\n                0.032049052,\n                0.010766288,\n                0.06673027,\n                -0.021861596,\n                -0.0052125407,\n                -0.04830511,\n                0.029246282,\n                -0.023981951,\n                -0.039677456,\n                0.0135995215,\n                0.038995042,\n                -0.018510459,\n                0.040530473,\n                -0.015817365,\n                -0.02227592,\n                -0.019582823,\n                0.022251546,\n                0.02242215,\n                0.008128029,\n                0.063123226,\n                -0.0078111948,\n                -0.021983456,\n                0.037508357,\n                -0.034876194,\n                -0.008792164,\n                0.041724697,\n                -0.02094765,\n                0.0016359639,\n                -0.08227954,\n                0.008146308,\n                0.020460213,\n                -0.023847906,\n                0.015122766,\n                -0.063074484,\n                0.05137597,\n                -0.0039634807,\n                -0.022653684,\n                -0.028612614,\n                -0.0025468639,\n                -0.014781559,\n                -0.047476467,\n                -0.039750572,\n                -0.005910186,\n                -0.0049871006,\n                0.0047616605,\n                -0.0015643715,\n                -0.01345329,\n                -0.0065438556,\n                -0.006013767,\n                -0.007439523,\n                -0.04830511,\n                0.0010693172,\n                -0.01402603,\n                -0.055909146,\n                0.022020014,\n                -0.019192873,\n                -0.034266893,\n                -0.06677901,\n                -0.03587544,\n                0.013307058,\n                0.009450205,\n                -0.00647074,\n                -0.008201146,\n                -0.023579815,\n                0.0004824875,\n                0.016170757,\n                0.029319398,\n                -0.058882516,\n                -0.03897067,\n                0.038995042,\n                -0.0012231648,\n                0.007238455,\n                0.039750572,\n                0.016438847,\n                -0.0043869424,\n                0.04160284,\n                -0.058736283,\n                -0.035266142,\n                -0.013136456,\n                -0.001748684,\n                -0.0124906,\n                0.002903303,\n                -0.01550053,\n                0.037971422,\n                -0.03214654,\n                -0.010498197,\n                0.010035131,\n                -0.009791411,\n                -0.03765459,\n                0.029855581,\n                0.040798564,\n                0.031707846,\n                -0.018461715,\n                0.058102615,\n                0.031488497,\n                -0.017949905,\n                -0.023628559,\n                -0.0132826865,\n                -0.018863853,\n                0.004691591,\n                0.006702273,\n                -0.042358365,\n                0.0121311145,\n                0.023677303,\n                0.005489771,\n                0.0016405337,\n                -0.013709195,\n                -0.012600274,\n                0.047257118,\n                0.019497521,\n                -0.009858434,\n                0.009535506,\n                0.02702844,\n                0.045014903,\n                0.0771127,\n                -0.010467732,\n                -0.030464878,\n                -0.013099898,\n                -0.018656692,\n                -0.022020014,\n                -0.021593506,\n                0.006135626,\n                -0.04060359,\n                -0.06005237,\n                -0.0049109384,\n                0.007987891,\n                -0.018766364,\n                0.009779226,\n                -0.042504597,\n                -0.024274414,\n                0.0052612843,\n                0.0038873183,\n                -0.0028058153,\n                0.047598325,\n                0.017657444,\n                0.005739583,\n                -0.028466381,\n                0.016182942,\n                0.01152791,\n                0.015329926,\n                -0.039433736,\n                0.0117350705,\n                0.023421397,\n                -0.018949155,\n                0.052984517,\n                -0.01787679,\n                0.036582224,\n                0.017352795,\n                -0.034291267,\n                0.0064219963,\n                -0.01027885,\n                0.024713108,\n                0.004752521,\n                -0.03558298,\n                0.018754179,\n                0.014099145,\n                0.006077743,\n                -0.00778073,\n                0.03268272,\n                0.002147774,\n                -0.024871526,\n                -0.0440644,\n                -0.017974278,\n                0.020886721,\n                -0.017255306,\n                -0.013928542,\n                0.046233498,\n                0.0123687405,\n                -0.029002564,\n                -0.02332391,\n                0.0022970517,\n                0.01974124,\n                -0.0063915313,\n                -0.021410717,\n                0.021873781,\n                0.013928542,\n                -0.006300137,\n                -0.0013633033,\n                0.032828953,\n                -0.0039604343,\n                0.022117501,\n                0.007987891,\n                -0.037825193,\n                0.003497368,\n                0.02236122,\n                -0.012441856,\n                -0.0023534119,\n                0.021483831,\n                -0.0073907794,\n                0.00784166,\n                -0.029270655,\n                0.009791411,\n                -0.01730405,\n                0.04367445,\n                -0.016243873,\n                0.024213485,\n                0.069021225,\n                0.0036679714,\n                -0.023019262,\n                -0.021959083,\n                -0.01922943,\n                0.009243044,\n                -0.0020472398,\n                0.006769296,\n                -0.006489019,\n                0.026346026,\n                0.031171663,\n                -0.029855581,\n                0.011083122,\n                -0.0057670013,\n                -0.019887472,\n                -0.030294275,\n                0.014854674,\n                0.0071165953,\n                0.08647151,\n                -0.004408268,\n                0.05420311,\n                -0.009072441,\n                -0.030903572,\n                0.035704836,\n                0.053082004,\n                -0.029953068,\n                -0.02780834,\n                -0.0028560823,\n                0.0018720668,\n                0.004932264,\n                -0.0066352505,\n                0.022519637,\n                -0.012374833,\n                -0.009450205,\n                0.0052186335,\n                0.004764707,\n                0.0052430057,\n                -0.030854829,\n                -0.005840117,\n                -0.0029535699,\n                0.0014409887,\n                -0.0308792,\n                -0.022860844,\n                0.0043503847,\n                -0.025761101,\n                -0.010138711,\n                -0.0108028455,\n                -0.009462391,\n                0.05239959,\n                -0.014257563,\n                0.0020213446,\n                0.04430812,\n                -0.038263887,\n                0.016621638,\n                -0.0373865,\n                -0.0020990302,\n                -0.017974278,\n                0.006507298,\n                0.04343073,\n                0.008676398,\n                0.0169141,\n                0.003290207,\n                -0.018400786,\n                0.02727216,\n                0.0030053603,\n                0.014915604,\n                0.013160828,\n                -0.0013701579,\n                -0.007000829,\n                -0.00022067995,\n                0.020094633,\n                0.05956493,\n                0.004158456,\n                0.003341997,\n                -0.016792241,\n                -0.012722133,\n                -0.008286446,\n                -0.07058103,\n                -0.012673389,\n                0.0063488805,\n                -0.0102057345,\n                -0.0020746582,\n                -0.010875962,\n                -0.018510459,\n                -0.01941222,\n                -0.0005312313,\n                -0.010650521,\n                0.019521894,\n                -0.02106951,\n                0.022409964,\n                -0.014135703,\n                0.008749513,\n                -0.05059607,\n                0.018863853,\n                0.021020766,\n                0.00414627,\n                0.0013427394,\n                0.009693924,\n                -0.0039025508,\n                -0.010528662,\n                -0.00516989,\n                0.0039573875,\n                0.014513467,\n                0.003247556,\n                0.025785472,\n                -0.029855581,\n                -0.045404855,\n                0.021764109,\n                -0.012185951,\n                -0.0030266857,\n                -0.01883948,\n                -0.031074176,\n                -0.0059497906,\n                0.020326167,\n                -0.01242967,\n                0.030611109,\n                0.0024554692,\n                -0.0063732523,\n                0.04920687,\n                0.0017974278,\n                -0.036460366,\n                -0.010047317,\n                -0.0032627885,\n                0.012978038,\n                0.004527081,\n                -0.061465938,\n                -0.010534755,\n                -0.040286753,\n                0.02678472,\n                0.0016161618,\n                -0.027394019,\n                -0.013940728,\n                -0.052692052,\n                -0.05200964,\n                0.06736394,\n                0.023592,\n                -0.019570637,\n                0.0046672192,\n                -0.0011881302,\n                0.014135703,\n                -0.037630215,\n                0.043211382,\n                -0.014915604,\n                -0.030099299,\n                0.015342113,\n                -0.017949905,\n                -0.02236122,\n                0.019619381,\n                -0.0043747565,\n                -0.032000307,\n                -0.028978191,\n                -0.010510383,\n                0.040676706,\n                0.031147292,\n                -0.014050402,\n                0.025200548,\n                -0.040676706,\n                0.004289455,\n                -0.036582224,\n                -0.015074021,\n                0.036435995,\n                -0.015171509,\n                -0.017206563,\n                -0.005824885,\n                -0.05751769,\n                -0.046550333,\n                0.0016557662,\n                -0.011198889,\n                -0.0063793454,\n                0.0126855755,\n                -0.019180687,\n                -0.030659853,\n                0.01766963,\n                0.009876713,\n                -0.059272468,\n                0.017438097,\n                -0.0025087828,\n                0.008438772,\n                0.010449453,\n                -0.0035674372,\n                -0.008073193,\n                -0.02395758,\n                0.014915604,\n                -0.0014120471,\n                0.010492104,\n                0.007323757,\n                -0.0022574475,\n                -0.008475329,\n                -0.019546265,\n                -0.0015796039,\n                0.026735976,\n                0.0060107205,\n                -0.027978944,\n                -0.021276671,\n                -0.020862348,\n                0.002679386,\n                0.05161969,\n                0.007786823,\n                -0.00009396511,\n                0.027613366,\n                0.032341514,\n                0.007963519,\n                -0.017645257,\n                -0.044015657,\n                0.012259067,\n                0.021751923,\n                -0.005553747,\n                -0.022836473,\n                0.019777799,\n                -0.020423654,\n                -0.0053374465,\n                -0.013660451,\n                -0.004752521,\n                -0.011643676,\n                -0.00086215604,\n                -0.011442608,\n                0.0067510167,\n                -0.037605844,\n                0.0025362012,\n                0.0012597227,\n                -0.007933054,\n                -0.016792241,\n                0.01715782,\n                -0.0332189,\n                -0.024103811,\n                0.0095416,\n                -0.018425157,\n                -0.035388,\n                0.0014981104,\n                0.01384324,\n                0.032365885,\n                0.008036635,\n                0.01378231,\n                0.06872877,\n                0.040457357,\n                -0.027905827,\n                0.029709348,\n                0.007677149,\n                0.025371151,\n                0.012563716,\n                -0.022239361,\n                -0.038337003,\n                -0.011204982,\n                -0.026979696,\n                -0.0411154,\n                -0.0121433,\n                0.011631491,\n                0.010272757,\n                0.006671808,\n                0.0029444303,\n                -0.018498274,\n                0.028393267,\n                0.022202803,\n                0.0073420354,\n                0.0625383,\n                0.020862348,\n                0.015244625,\n                -0.015244625,\n                0.022885216,\n                -0.006683994,\n                -0.0048043113,\n                -0.0046062893,\n                0.005763955,\n                -0.034364384,\n                0.005806606,\n                -0.03217091,\n                0.014647514,\n                0.015390856,\n                -0.020569885,\n                0.0010220966,\n                -0.03470559,\n                0.04165158,\n                -0.01844953,\n                -0.015390856,\n                0.023275167,\n                -0.00567256,\n                -0.01736498,\n                -0.028100803,\n                0.00204267,\n                0.003923876,\n                -0.023701675,\n                0.02164225,\n                -0.0017532537,\n                -0.0139163565,\n                0.017742746,\n                -0.029709348,\n                -0.022178432,\n                0.047086515,\n                -0.0038934115,\n                -0.02780834,\n                0.06682776,\n                0.008073193,\n                0.012466228,\n                0.025834216,\n                0.025103059,\n                -0.0030937083,\n                -0.015403043,\n                0.010382431,\n                0.03295081,\n                -0.024055067,\n                -0.02383572,\n                -0.019619381,\n                -0.012003162,\n                -0.000119479446,\n                0.0017166958,\n                -0.019509709,\n                0.025566125,\n                0.020996394,\n                -0.028003316,\n                0.0042803152,\n                -0.0038659929,\n                0.021227926,\n                -0.012277346,\n                0.07530918,\n                -0.01736498,\n                -0.013465476,\n                -0.010748009,\n                0.02778397,\n                0.03960434,\n                -0.012076277,\n                -0.00790259,\n                -0.0062453,\n                0.0024250043,\n                0.044746812,\n                0.007725893,\n                0.0054501668,\n                -0.0033876945,\n                0.034656845,\n                -0.0054623527,\n                -0.011540095,\n                -0.013489848,\n                0.02600482,\n                0.0043290593,\n                -0.022592753,\n                0.045185506,\n                0.03714278,\n                0.02832015,\n                -0.047354605,\n                -0.02817392,\n                -0.011948325,\n                -0.018315485,\n                0.0050145187,\n                -0.0045088017,\n                0.008274261,\n                0.008371748,\n                0.040554844,\n                -0.001242967,\n                -0.02440846,\n                0.029100051,\n                0.046014152,\n                0.024335345,\n                0.023579815,\n                0.017291864,\n                0.007884311,\n                0.054885525,\n                -0.0036557852,\n                -0.0072567337,\n                0.0012833329,\n                -0.00051561807,\n                -0.009230858,\n                0.0039330157,\n                -0.049133755,\n                -0.010144805,\n                -0.0039695734,\n                0.0013206524,\n                -0.028490754,\n                0.007829473,\n                0.0045088017,\n                -0.035168655,\n                -0.020411469,\n                0.022617126,\n                -0.0017075564,\n                0.030513622,\n                -0.029148795,\n                -0.0029185354,\n                -0.021471646,\n                0.048524458,\n                0.03219528,\n                0.01883948,\n                -0.036825944,\n                -0.03190282,\n                -0.02293396,\n                -0.0124906,\n                0.007171432,\n                -0.0002012586,\n                0.017352795,\n                -0.013026781,\n                -0.0133801745,\n                0.03161036,\n                0.0045666853,\n                0.03421815,\n                0.009316159,\n                -0.025078688,\n                0.009261323,\n                0.005925419,\n                0.02422567,\n                -0.0031744402,\n                0.021751923,\n                0.032073423,\n                0.027320903,\n                0.030026184,\n                -0.0040305033,\n                0.056981508,\n                -0.034778703,\n                0.016572893,\n                -0.0034455776,\n                -0.01220423,\n                0.00232447,\n                0.04396691,\n                -0.030976688,\n                -0.038288258,\n                0.0016572893,\n                0.05766392,\n                0.005943698,\n                -0.0149277905,\n                -0.0077746366,\n                0.024786225,\n                0.010126526,\n                0.038726952,\n                0.0287101,\n                0.013623893,\n                -0.023494514,\n                -0.01300241,\n                0.02031398,\n                -0.025273662,\n                -0.011229354,\n                0.010004666,\n                0.005239959,\n                0.0035552513,\n                -0.038629465,\n                -0.000015589449,\n                -0.04589229,\n                -0.006120394,\n                0.009523321,\n                -0.030927943,\n                0.009230858,\n                -0.0030860922,\n                -0.038142025,\n                0.014013844,\n                0.0060350923,\n                -0.0054593063,\n                -0.014866861,\n                -0.018157067,\n                0.0016192083,\n                0.010516476,\n                0.015658947,\n                0.0022513545,\n                0.004795172,\n                -0.026272912,\n                -0.022751171,\n                0.0114365155,\n                -0.0550805,\n                0.04265083,\n                -0.021288857,\n                0.040043034,\n                0.017267494,\n                -0.0059497906,\n                -0.008176773,\n                0.007323757,\n                0.018242368,\n                0.008201146,\n                0.023348283,\n                -0.028661357,\n                -0.019131944,\n                -0.013087711,\n                -0.018973526,\n                -0.012185951,\n                0.033901315,\n                0.012411391,\n                0.0065438556,\n                -0.0011051134,\n                0.0014859245,\n                0.014001658,\n                -0.007025201,\n                0.0006709889,\n                -0.030196788,\n                0.025273662,\n                -0.031171663,\n                0.0108028455,\n                -0.006671808,\n                -0.012064092,\n                0.00029988863,\n                0.021361973,\n                -0.01113796,\n                -0.00062643405,\n                0.0070373868,\n                -0.0005586497,\n                0.018681062,\n                -0.0037502265,\n                -0.042212136,\n                -0.024103811,\n                -0.013502033,\n                0.005565933,\n                -0.007457802,\n                -0.029538745,\n                0.0055628866,\n                0.02082579,\n                0.03667971,\n                0.0047616605,\n                0.00915165,\n                0.0022620172,\n                0.0024006325,\n                -0.008591096,\n                -0.0023092378,\n                -0.008603281,\n                0.013709195,\n                -0.0061721844,\n                0.006138673,\n                -0.036289763,\n                0.024493761,\n                0.013855427,\n                0.011253726,\n                -0.035168655,\n                0.035777953,\n                -0.0018644505,\n                -0.016511964,\n                -0.020119006,\n                -0.0041523627,\n                0.011058751,\n                0.0098888995,\n                -0.023019262,\n                0.00046839748,\n                0.013818868,\n                0.011783815,\n                0.023384841,\n                0.035266142,\n                -0.012600274,\n                0.010309314,\n                0.002616933,\n                0.002280296,\n                -0.014659699,\n                0.007890403,\n                0.01869325,\n                0.00720799,\n                0.016877543,\n                -0.0205577,\n                0.052058384,\n                0.0058919075,\n                0.014659699,\n                -0.01709689,\n                0.02780834,\n                -0.00692162,\n                -0.021166997,\n                0.038020167,\n                -0.007939147,\n                0.019826543,\n                -0.005556794,\n                0.028636985,\n                0.014818117,\n                -0.010297129,\n                0.007713707,\n                -0.017840233,\n                0.0070922235,\n                0.026053563,\n                0.012161579,\n                0.008487515,\n                0.036752827,\n                0.017218748,\n                -0.014050402,\n                -0.021057324,\n                0.014720629,\n                -0.004810404,\n                0.011546189,\n                -0.008469236,\n                0.016085455,\n                0.004990147,\n                -0.0014676455,\n                0.007939147,\n                -0.03663097,\n                0.006476833,\n                -0.0024996432,\n                -0.018632319,\n                0.02031398,\n                0.09734138,\n                0.00015556128,\n                0.0039330157,\n                -0.01568332,\n                0.007933054,\n                -0.0220322,\n                -0.031951565,\n                -0.01631699,\n                0.062343325,\n                -0.013709195,\n                0.0057700477,\n                -0.026833465,\n                0.009565972,\n                0.003128743,\n                0.042260878,\n                0.03957997,\n                -0.030537993,\n                0.0067814817,\n                0.027467133,\n                0.014403794,\n                0.028393267,\n                -0.006964271,\n                0.02768648,\n                -0.028393267,\n                -0.012929294,\n                -0.009102905,\n                0.011820372,\n                -0.043479472,\n                0.0008560631,\n                -0.0013914832,\n                0.024786225,\n                0.014513467,\n                0.011643676,\n                -0.03719152,\n                0.008280354,\n                0.009529414,\n                0.033145785,\n                -0.025834216,\n                0.0062940437,\n                0.010102154,\n                -0.048256367,\n                0.025371151,\n                -0.03268272,\n                0.019765614,\n                0.01673131,\n                0.0074090585,\n                -0.015719878,\n                -0.045404855,\n                0.021325415,\n                -0.012454042,\n                0.032585233,\n                -0.018705435,\n                -0.014440352,\n                -0.028856331,\n                -0.008511887,\n                0.010601778,\n                -0.0028073385,\n                -0.009876713,\n                0.00414627,\n                -0.00044212153,\n                -0.027467133,\n                -0.016329175,\n                0.013014596,\n                0.0070983167,\n                0.01660945,\n                0.013099898,\n                -0.029416885,\n                0.014464724,\n                -0.00047030154,\n                0.00880435,\n                0.024262229,\n                0.026979696,\n                -0.018315485,\n                -0.02227592,\n                0.029124424,\n                0.016828798,\n                0.03368197,\n                0.0010038178,\n                0.0014745,\n                -0.047232747,\n                -0.011503538,\n                0.015451786,\n                0.028588241,\n                0.0066657155,\n                -0.022129687,\n                0.025127431,\n                -0.02805206,\n                0.013246129,\n                0.004143223,\n                0.022946145,\n                -0.027905827,\n                -0.0017349748,\n                -0.0038142027,\n                0.00088576635,\n                -0.0027007114,\n                0.043113895,\n                -0.02756462,\n                -0.014062587,\n                -0.0032932532,\n                -0.006568228,\n                -0.0352174,\n                0.01736498,\n                -0.0040762005,\n                -0.006580414,\n                0.0110404715,\n                -0.030659853,\n                -0.0052308193,\n                -0.030196788,\n                -0.017267494,\n                -0.0061752307,\n                -0.0024448065,\n                0.002185855,\n                0.021020766,\n                0.023604188,\n                -0.008158495,\n                0.053520698,\n                -0.057712663,\n                0.00068584055,\n                0.025322406,\n                0.015598018,\n                0.016560707,\n                -0.015780807,\n                -0.019241616,\n                0.035972927,\n                0.018754179,\n                0.015415228,\n                -0.0017989511,\n                0.0330483,\n                0.014964348,\n                0.0346081,\n                -0.005185122,\n                -0.034096293,\n                -0.009626902,\n                0.002085321,\n                -0.021654435,\n                0.020813605,\n                -0.035144284,\n                0.011503538,\n                0.010815032,\n                -0.03589981,\n                -0.03112292,\n                0.00018221805,\n                -0.03585107,\n                -0.005285656,\n                -0.015756436,\n                0.016548522,\n                0.0032262306,\n                0.0010236199,\n                0.03419378,\n                -0.003259742,\n                -0.01736498,\n                -0.014391609,\n                0.04213902,\n                -0.008511887,\n                0.01384324,\n                -0.002179762,\n                0.03960434,\n                0.03897067,\n                -0.0129049225,\n                -0.02844201,\n                -0.04842697,\n                -0.026930952,\n                -0.004383896,\n                0.023738233,\n                0.011838651,\n                -0.023628559,\n                0.012758691,\n                0.038361374,\n                0.0030464877,\n                0.008871373,\n                -0.038775697,\n                -0.00778073,\n                -0.010912519,\n                0.030269902,\n                0.014403794,\n                -0.014099145,\n                -0.010778474,\n                0.05137597,\n                -0.023141121,\n                -0.033097044,\n                -0.000017529204,\n                -0.0009337485,\n                -0.004889613,\n                -0.0070800376,\n                0.013441104,\n                0.010863775,\n                -0.020021517,\n                -0.014330679,\n                -0.021154812,\n                0.010540848,\n                -0.03921439,\n                -0.020216493,\n                -0.022860844,\n                0.035972927,\n                -0.012563716,\n                0.010242292,\n                -0.012612459,\n                0.008889651,\n                0.007993984,\n                0.02293396,\n                0.0036740643,\n                -0.020764861,\n                0.016304802,\n                0.006482926,\n                0.018632319,\n                0.0036801572,\n                -0.029733721,\n                0.007677149,\n                0.019765614,\n                -0.002348842,\n                0.020204308,\n                0.012563716,\n                -0.015390856,\n                0.018510459,\n                -0.0008195052,\n                0.0057852804,\n                0.0070922235,\n                0.0068728765,\n                0.043650076,\n                0.006964271,\n                0.004109712,\n                -0.021483831,\n                -0.016475406,\n                -0.049669936,\n                0.01832767,\n                -0.018985711,\n                -0.02227592,\n                0.016682567,\n                -0.003035825,\n                -0.019071013,\n                0.012709947,\n                -0.022678055,\n                -0.0018202765,\n                -0.022288105,\n                -0.05005989,\n                0.0015719876,\n                -0.009407554,\n                -0.031293523,\n                -0.017559955,\n                0.0032658349,\n                -0.023470141,\n                -0.0001422329,\n                -0.03048925,\n                0.0016085455,\n                -0.021410717,\n                0.011716792,\n                0.043918166,\n                0.04218776,\n                -0.036801573,\n                0.013940728,\n                -0.016597265,\n                0.037313383,\n                -0.008097565,\n                0.019558452,\n                0.018023022,\n                -0.0070922235,\n                0.045551084,\n                0.0035126004,\n                -0.017864604,\n                -0.03560735,\n                -0.030757342,\n                -0.050401095,\n                -0.010735823,\n                -0.010449453,\n                -0.00829254,\n                0.017511211,\n                0.03780082,\n                -0.016012339,\n                -0.01363608,\n                0.0025453405,\n                -0.03161036,\n                0.0006469978,\n                0.043381985,\n                -0.017194377,\n                -0.003366369,\n                -0.0054501668,\n                -0.022799915,\n                -0.025005572,\n                0.04238274,\n                0.0411154,\n                -0.021288857,\n                0.040969167,\n                -0.0058797216,\n                -0.013721381,\n                0.000068545975,\n                0.017218748,\n                -0.006300137,\n                0.047086515,\n                -0.025054315,\n                -0.0046123825,\n                0.026321655,\n                0.021118253,\n                0.01965594,\n                0.03270709,\n                0.020253051,\n                0.012064092,\n                0.016207315,\n                -0.00040442124,\n                -0.009230858,\n                -0.006805854,\n                0.003378555,\n                -0.013148641,\n                0.0013937681,\n                -0.0027875362,\n                0.047622696,\n                -0.023884464,\n                0.018815108,\n                0.0033694154,\n                -0.022020014,\n                -0.00048972294,\n                0.012405299,\n                -0.0051881685,\n                0.0017349748,\n                0.014598769,\n                -0.005316121,\n                0.0038812254,\n                -0.01408696,\n                0.018230183,\n                0.03921439,\n                0.009450205,\n                0.032097794,\n                0.022982704,\n                -0.0095416,\n                -0.0029231051,\n                -0.008572817,\n                -0.002391493,\n                -0.01408696,\n                -0.001345786,\n                0.0049871006,\n                -0.00527347,\n                -0.0346081,\n                -0.023287352,\n                0.004109712,\n                -0.0027692574,\n                0.020898907,\n                0.0005525567,\n                -0.018437345,\n                -0.0015719876,\n                -0.0001145289,\n                -0.00692162,\n                -0.0034486242,\n                0.016694752,\n                -0.0075796614,\n                -0.032000307,\n                -0.010967356,\n                0.017718373,\n                0.01294148,\n                0.021630064,\n                0.052887026,\n                -0.0034486242,\n                0.00929788,\n                0.018949155,\n                -0.01408696,\n                0.0017867651,\n                -0.012234695,\n                0.021532577,\n                0.056835275,\n                -0.016024526,\n                -0.016658194,\n                0.0043260125,\n                -0.006495112,\n                -0.004959682,\n                0.0049749147,\n                0.010327593,\n                -0.027004067,\n                0.026979696,\n                -0.032292772,\n                0.03397443,\n                -0.0014432736,\n                -0.0162195,\n                -0.008042728,\n                -0.004414361,\n                -0.013038968,\n                -0.038605094,\n                -0.012795249,\n                -0.024128184,\n                -0.012649017,\n                -0.0049444498,\n                0.027491506,\n                -0.0074090585,\n                -0.005791373,\n                0.021605691,\n                -0.020399282,\n                0.032512117,\n                0.03524177,\n                0.027394019,\n                -0.022397779,\n                0.012137207,\n                0.056445327\n            ]\n        }\n    ],\n    \"model\": \"text-embedding-3-small\",\n    \"usage\": {\n        \"prompt_tokens\": 11,\n        \"total_tokens\": 11\n    }\n}"
						}
					]
				},
				{
					"name": "Create Embedding of User Input",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let userInput = pm.collectionVariables.get('inputString'); ",
									"if(userInput == null || userInput == \"undefined\"){",
									"    userInput = \"What forms of payment are accepted?\";",
									"    pm.collectionVariables.set('inputString', userInput);",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseData = pm.response.json();",
									"console.log(responseData)",
									"pm.collectionVariables.set(\"userInputEmbeddings\", JSON.stringify(responseData.data.map(embed => embed.embedding)));",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Data object and its properties are present\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.exist.and.to.be.an('array');",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item).to.be.an('object');",
									"        pm.expect(item.index).to.exist.and.to.be.a('number');",
									"        pm.expect(item.embedding).to.exist.and.to.be.an('array');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Embedding array is present and contains expected number of elements\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.data).to.exist.and.to.be.an('array');",
									"  pm.expect(responseData.data).to.have.lengthOf.at.least(1, \"Embedding array should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Model field should not be empty\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.model).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Usage object and its properties are present\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.usage).to.exist.and.to.be.an('object');",
									"    pm.expect(responseData.usage.prompt_tokens).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.usage.total_tokens).to.exist.and.to.be.a('number');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{vault:OpenAIKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"{{inputStringUser}}\",\n    \"model\": \"text-embedding-3-small\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/1/v1/embeddings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"embeddings"
							]
						}
					},
					"response": [
						{
							"name": "Create Embedding of User Input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{vault:OpenAIKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"{{inputString}}\",\n    \"model\": \"text-embedding-3-small\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.openai.com/v1/embeddings",
									"protocol": "https",
									"host": [
										"api",
										"openai",
										"com"
									],
									"path": [
										"v1",
										"embeddings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 17 Jun 2024 07:18:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "openai-model",
									"value": "text-embedding-3-small"
								},
								{
									"key": "openai-organization",
									"value": "user-3wdwkjaeznoulp9fnvi35lbh"
								},
								{
									"key": "openai-processing-ms",
									"value": "20"
								},
								{
									"key": "openai-version",
									"value": "2020-10-01"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "x-ratelimit-limit-requests",
									"value": "3000"
								},
								{
									"key": "x-ratelimit-limit-tokens",
									"value": "1000000"
								},
								{
									"key": "x-ratelimit-remaining-requests",
									"value": "2999"
								},
								{
									"key": "x-ratelimit-remaining-tokens",
									"value": "999986"
								},
								{
									"key": "x-ratelimit-reset-requests",
									"value": "20ms"
								},
								{
									"key": "x-ratelimit-reset-tokens",
									"value": "0s"
								},
								{
									"key": "x-request-id",
									"value": "req_e731a671a3c42ef0a1e78779b52dc97b"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Set-Cookie",
									"value": "__cf_bm=XsZnxgxBZl7EfoNI3htzM3eA8gyOYjSdxzJimwO3Afo-1718608715-1.0.1.1-VnzQ71IjnQX0ELWypRYa5SJfU_6CynxppMA0rM3Deeyyb5I_48gdAg6ioD01tBG8KM2AuHojjm37bFru.gA98A; path=/; expires=Mon, 17-Jun-24 07:48:35 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None"
								},
								{
									"key": "Set-Cookie",
									"value": "_cfuvid=CRX8GN385YltHtZZ6YPO25qnfCRtaIe1cIHF_6RJhCE-1718608715066-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "895144346b147af7-SJC"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"object\": \"list\",\n    \"data\": [\n        {\n            \"object\": \"embedding\",\n            \"index\": 0,\n            \"embedding\": [\n                -0.0142941205,\n                0.019290362,\n                -0.052887026,\n                -0.031025432,\n                -0.009468484,\n                -0.035729207,\n                -0.02248308,\n                0.05444683,\n                0.010315408,\n                -0.0033267646,\n                0.025858589,\n                -0.0063306014,\n                0.007634498,\n                -0.043138266,\n                0.016901914,\n                0.011192796,\n                -0.013404546,\n                -0.014623141,\n                -0.07097098,\n                -0.010077782,\n                0.00539533,\n                0.030001812,\n                0.044527464,\n                -0.041944046,\n                -0.06292825,\n                0.046964657,\n                -0.04165158,\n                -0.02434753,\n                0.013550778,\n                -0.036338508,\n                0.0077746366,\n                -0.024566878,\n                0.009998573,\n                -0.0061843703,\n                -0.034096293,\n                -0.00094136473,\n                0.017864604,\n                0.041578464,\n                0.028661357,\n                0.020253051,\n                -0.010656614,\n                0.016792241,\n                0.0063549737,\n                -0.01164977,\n                0.032609604,\n                0.0034425312,\n                -0.028417638,\n                0.041334745,\n                0.020021517,\n                0.027491506,\n                -0.0036375064,\n                0.037776448,\n                -0.024786225,\n                0.030708596,\n                -0.029587489,\n                0.0135995215,\n                0.051327225,\n                0.019936217,\n                0.027247787,\n                -0.027247787,\n                0.06546293,\n                -0.038288258,\n                -0.026589746,\n                0.024213485,\n                -0.004651987,\n                -0.07579662,\n                0.012722133,\n                0.044235002,\n                -0.0047555673,\n                -0.051522203,\n                0.009559879,\n                0.024323158,\n                0.00023781645,\n                -0.049767423,\n                0.009748761,\n                -0.009754854,\n                -0.012319997,\n                -0.029806836,\n                0.020594258,\n                -0.0030068834,\n                -0.055957887,\n                -0.028515127,\n                -0.0093344385,\n                -0.019339105,\n                -0.024627807,\n                -0.029124424,\n                -0.051960897,\n                0.05556794,\n                -0.007159246,\n                0.018632319,\n                -0.007055666,\n                0.061075985,\n                0.036216646,\n                0.023701675,\n                0.010510383,\n                0.008816536,\n                -0.041529723,\n                0.011850838,\n                -0.0228121,\n                0.067607656,\n                0.06897248,\n                0.00008720571,\n                0.009383182,\n                0.0082437955,\n                0.034559358,\n                -0.05459306,\n                -0.014525654,\n                -0.011954418,\n                -0.016231688,\n                -0.032268398,\n                -0.054105625,\n                -0.081645876,\n                -0.009724389,\n                0.011789908,\n                0.016597265,\n                0.026199795,\n                -0.054495573,\n                -0.022056572,\n                -0.010778474,\n                -0.051473457,\n                -0.016024526,\n                -0.006744924,\n                -0.013209571,\n                -0.02230029,\n                -0.009876713,\n                -0.013136456,\n                -0.037971422,\n                0.016182942,\n                -0.06063729,\n                -0.013818868,\n                0.010327593,\n                -0.04828074,\n                0.015147137,\n                -0.013562963,\n                -0.0036375064,\n                0.017694,\n                -0.05712774,\n                -0.03268272,\n                -0.03509554,\n                -0.009584251,\n                0.0073785936,\n                0.020911092,\n                0.03290207,\n                -0.039287508,\n                -0.03743524,\n                -0.033389505,\n                -0.021240113,\n                0.000046054327,\n                -0.0058005126,\n                -0.029928695,\n                -0.042870175,\n                -0.054690547,\n                -0.025687985,\n                -0.011942232,\n                -0.011521817,\n                0.0146109555,\n                0.056542814,\n                0.03558298,\n                -0.0048317295,\n                0.0176087,\n                -0.014818117,\n                0.009773132,\n                -0.04740335,\n                0.00064814027,\n                -0.004962729,\n                0.003616181,\n                -0.019546265,\n                0.005477585,\n                -0.029563118,\n                -0.030586738,\n                0.047988277,\n                0.021020766,\n                -0.033121414,\n                0.0020152517,\n                0.031805333,\n                -0.0056999787,\n                0.03741087,\n                -0.02121574,\n                -0.030903572,\n                -0.022470893,\n                -0.028783217,\n                0.029416885,\n                0.032049052,\n                0.009474577,\n                -0.016572893,\n                -0.019290362,\n                -0.020923277,\n                0.018193625,\n                -0.049767423,\n                0.040311128,\n                0.009779226,\n                0.010412895,\n                -0.03909253,\n                -0.025127431,\n                -0.022836473,\n                -0.030513622,\n                -0.007476081,\n                -0.04742772,\n                -0.0133801745,\n                0.03187845,\n                0.02028961,\n                -0.033023927,\n                -0.0070312936,\n                0.024749666,\n                0.013099898,\n                -0.04686717,\n                -0.0975851,\n                -0.020996394,\n                -0.025054315,\n                -0.03563172,\n                0.058248848,\n                -0.009974201,\n                0.0029642326,\n                0.005757862,\n                -0.0052064476,\n                -0.012563716,\n                -0.0014478433,\n                0.023726046,\n                0.034681216,\n                -0.011393865,\n                -0.022202803,\n                0.008670304,\n                0.0093344385,\n                -0.004977961,\n                0.0027905828,\n                0.038507607,\n                -0.010906426,\n                -0.022214988,\n                0.004572778,\n                -0.055811655,\n                -0.0067510167,\n                0.040554844,\n                0.009553785,\n                0.0069459924,\n                -0.0078111948,\n                -0.010784566,\n                0.011034379,\n                0.012057998,\n                0.029051308,\n                -0.014123517,\n                -0.019363476,\n                0.0008469236,\n                0.017559955,\n                -0.004962729,\n                0.058492564,\n                -0.030757342,\n                0.0012064092,\n                -0.027467133,\n                0.066584036,\n                0.011022192,\n                -0.013136456,\n                -0.061953377,\n                -0.01351422,\n                -0.059174977,\n                0.014111332,\n                0.0011942232,\n                -0.013160828,\n                0.025663612,\n                0.026979696,\n                -0.0040183174,\n                -0.008371748,\n                -0.020472398,\n                0.026151052,\n                -0.011923953,\n                -0.007226269,\n                -0.0065743206,\n                0.029148795,\n                0.020996394,\n                -0.05186341,\n                0.045161135,\n                -0.036972176,\n                0.008000077,\n                0.043381985,\n                -0.005629909,\n                -0.015841737,\n                0.037581474,\n                -0.0403355,\n                0.04087168,\n                -0.042967662,\n                -0.0038202957,\n                -0.009986387,\n                -0.033023927,\n                -0.0076405914,\n                -0.043771937,\n                -0.035972927,\n                0.012393112,\n                -0.02139853,\n                -0.01902227,\n                0.009578157,\n                0.009547693,\n                -0.0060411855,\n                0.03341388,\n                -0.00095278904,\n                -0.00573349,\n                0.001162235,\n                0.029709348,\n                0.040798564,\n                0.010047317,\n                0.021166997,\n                0.0213376,\n                0.041944046,\n                0.025809845,\n                0.03151287,\n                0.0005826408,\n                0.009084627,\n                0.04535611,\n                -0.052887026,\n                -0.0012574379,\n                -0.0130633395,\n                0.01818144,\n                -0.029904325,\n                0.016828798,\n                0.028880704,\n                -0.010833311,\n                -0.03295081,\n                -0.040676706,\n                0.028003316,\n                -0.056786533,\n                -0.03689906,\n                -0.052448332,\n                0.033121414,\n                -0.020850163,\n                0.040701076,\n                0.01095517,\n                0.0051241927,\n                -0.076137826,\n                0.03831263,\n                0.036167905,\n                0.021800667,\n                -0.008073193,\n                0.03843449,\n                0.019387849,\n                0.021374159,\n                -0.0011409096,\n                -0.031707846,\n                0.04789079,\n                0.04291892,\n                -0.03290207,\n                0.01922943,\n                0.00363446,\n                0.0493531,\n                -0.021288857,\n                -0.044015657,\n                -0.0026656769,\n                -0.005182076,\n                -0.046501588,\n                0.060198598,\n                0.012843993,\n                0.007884311,\n                0.012514972,\n                -0.034413125,\n                0.005483678,\n                -0.0013008503,\n                0.026882209,\n                -0.0064524612,\n                0.0015750342,\n                0.0019375662,\n                -0.004383896,\n                -0.02856387,\n                0.021118253,\n                0.025907332,\n                0.03767896,\n                0.012953666,\n                -0.00030293514,\n                -0.028466381,\n                0.0485732,\n                0.021166997,\n                0.013867612,\n                -0.010120433,\n                -0.017145634,\n                -0.00057388213,\n                0.024176927,\n                -0.013343616,\n                0.029611861,\n                -0.054788038,\n                -0.019400034,\n                0.0066291573,\n                -0.0008789117,\n                0.032049052,\n                0.010766288,\n                0.06673027,\n                -0.021861596,\n                -0.0052125407,\n                -0.04830511,\n                0.029246282,\n                -0.023981951,\n                -0.039677456,\n                0.0135995215,\n                0.038995042,\n                -0.018510459,\n                0.040530473,\n                -0.015817365,\n                -0.02227592,\n                -0.019582823,\n                0.022251546,\n                0.02242215,\n                0.008128029,\n                0.063123226,\n                -0.0078111948,\n                -0.021983456,\n                0.037508357,\n                -0.034876194,\n                -0.008792164,\n                0.041724697,\n                -0.02094765,\n                0.0016359639,\n                -0.08227954,\n                0.008146308,\n                0.020460213,\n                -0.023847906,\n                0.015122766,\n                -0.063074484,\n                0.05137597,\n                -0.0039634807,\n                -0.022653684,\n                -0.028612614,\n                -0.0025468639,\n                -0.014781559,\n                -0.047476467,\n                -0.039750572,\n                -0.005910186,\n                -0.0049871006,\n                0.0047616605,\n                -0.0015643715,\n                -0.01345329,\n                -0.0065438556,\n                -0.006013767,\n                -0.007439523,\n                -0.04830511,\n                0.0010693172,\n                -0.01402603,\n                -0.055909146,\n                0.022020014,\n                -0.019192873,\n                -0.034266893,\n                -0.06677901,\n                -0.03587544,\n                0.013307058,\n                0.009450205,\n                -0.00647074,\n                -0.008201146,\n                -0.023579815,\n                0.0004824875,\n                0.016170757,\n                0.029319398,\n                -0.058882516,\n                -0.03897067,\n                0.038995042,\n                -0.0012231648,\n                0.007238455,\n                0.039750572,\n                0.016438847,\n                -0.0043869424,\n                0.04160284,\n                -0.058736283,\n                -0.035266142,\n                -0.013136456,\n                -0.001748684,\n                -0.0124906,\n                0.002903303,\n                -0.01550053,\n                0.037971422,\n                -0.03214654,\n                -0.010498197,\n                0.010035131,\n                -0.009791411,\n                -0.03765459,\n                0.029855581,\n                0.040798564,\n                0.031707846,\n                -0.018461715,\n                0.058102615,\n                0.031488497,\n                -0.017949905,\n                -0.023628559,\n                -0.0132826865,\n                -0.018863853,\n                0.004691591,\n                0.006702273,\n                -0.042358365,\n                0.0121311145,\n                0.023677303,\n                0.005489771,\n                0.0016405337,\n                -0.013709195,\n                -0.012600274,\n                0.047257118,\n                0.019497521,\n                -0.009858434,\n                0.009535506,\n                0.02702844,\n                0.045014903,\n                0.0771127,\n                -0.010467732,\n                -0.030464878,\n                -0.013099898,\n                -0.018656692,\n                -0.022020014,\n                -0.021593506,\n                0.006135626,\n                -0.04060359,\n                -0.06005237,\n                -0.0049109384,\n                0.007987891,\n                -0.018766364,\n                0.009779226,\n                -0.042504597,\n                -0.024274414,\n                0.0052612843,\n                0.0038873183,\n                -0.0028058153,\n                0.047598325,\n                0.017657444,\n                0.005739583,\n                -0.028466381,\n                0.016182942,\n                0.01152791,\n                0.015329926,\n                -0.039433736,\n                0.0117350705,\n                0.023421397,\n                -0.018949155,\n                0.052984517,\n                -0.01787679,\n                0.036582224,\n                0.017352795,\n                -0.034291267,\n                0.0064219963,\n                -0.01027885,\n                0.024713108,\n                0.004752521,\n                -0.03558298,\n                0.018754179,\n                0.014099145,\n                0.006077743,\n                -0.00778073,\n                0.03268272,\n                0.002147774,\n                -0.024871526,\n                -0.0440644,\n                -0.017974278,\n                0.020886721,\n                -0.017255306,\n                -0.013928542,\n                0.046233498,\n                0.0123687405,\n                -0.029002564,\n                -0.02332391,\n                0.0022970517,\n                0.01974124,\n                -0.0063915313,\n                -0.021410717,\n                0.021873781,\n                0.013928542,\n                -0.006300137,\n                -0.0013633033,\n                0.032828953,\n                -0.0039604343,\n                0.022117501,\n                0.007987891,\n                -0.037825193,\n                0.003497368,\n                0.02236122,\n                -0.012441856,\n                -0.0023534119,\n                0.021483831,\n                -0.0073907794,\n                0.00784166,\n                -0.029270655,\n                0.009791411,\n                -0.01730405,\n                0.04367445,\n                -0.016243873,\n                0.024213485,\n                0.069021225,\n                0.0036679714,\n                -0.023019262,\n                -0.021959083,\n                -0.01922943,\n                0.009243044,\n                -0.0020472398,\n                0.006769296,\n                -0.006489019,\n                0.026346026,\n                0.031171663,\n                -0.029855581,\n                0.011083122,\n                -0.0057670013,\n                -0.019887472,\n                -0.030294275,\n                0.014854674,\n                0.0071165953,\n                0.08647151,\n                -0.004408268,\n                0.05420311,\n                -0.009072441,\n                -0.030903572,\n                0.035704836,\n                0.053082004,\n                -0.029953068,\n                -0.02780834,\n                -0.0028560823,\n                0.0018720668,\n                0.004932264,\n                -0.0066352505,\n                0.022519637,\n                -0.012374833,\n                -0.009450205,\n                0.0052186335,\n                0.004764707,\n                0.0052430057,\n                -0.030854829,\n                -0.005840117,\n                -0.0029535699,\n                0.0014409887,\n                -0.0308792,\n                -0.022860844,\n                0.0043503847,\n                -0.025761101,\n                -0.010138711,\n                -0.0108028455,\n                -0.009462391,\n                0.05239959,\n                -0.014257563,\n                0.0020213446,\n                0.04430812,\n                -0.038263887,\n                0.016621638,\n                -0.0373865,\n                -0.0020990302,\n                -0.017974278,\n                0.006507298,\n                0.04343073,\n                0.008676398,\n                0.0169141,\n                0.003290207,\n                -0.018400786,\n                0.02727216,\n                0.0030053603,\n                0.014915604,\n                0.013160828,\n                -0.0013701579,\n                -0.007000829,\n                -0.00022067995,\n                0.020094633,\n                0.05956493,\n                0.004158456,\n                0.003341997,\n                -0.016792241,\n                -0.012722133,\n                -0.008286446,\n                -0.07058103,\n                -0.012673389,\n                0.0063488805,\n                -0.0102057345,\n                -0.0020746582,\n                -0.010875962,\n                -0.018510459,\n                -0.01941222,\n                -0.0005312313,\n                -0.010650521,\n                0.019521894,\n                -0.02106951,\n                0.022409964,\n                -0.014135703,\n                0.008749513,\n                -0.05059607,\n                0.018863853,\n                0.021020766,\n                0.00414627,\n                0.0013427394,\n                0.009693924,\n                -0.0039025508,\n                -0.010528662,\n                -0.00516989,\n                0.0039573875,\n                0.014513467,\n                0.003247556,\n                0.025785472,\n                -0.029855581,\n                -0.045404855,\n                0.021764109,\n                -0.012185951,\n                -0.0030266857,\n                -0.01883948,\n                -0.031074176,\n                -0.0059497906,\n                0.020326167,\n                -0.01242967,\n                0.030611109,\n                0.0024554692,\n                -0.0063732523,\n                0.04920687,\n                0.0017974278,\n                -0.036460366,\n                -0.010047317,\n                -0.0032627885,\n                0.012978038,\n                0.004527081,\n                -0.061465938,\n                -0.010534755,\n                -0.040286753,\n                0.02678472,\n                0.0016161618,\n                -0.027394019,\n                -0.013940728,\n                -0.052692052,\n                -0.05200964,\n                0.06736394,\n                0.023592,\n                -0.019570637,\n                0.0046672192,\n                -0.0011881302,\n                0.014135703,\n                -0.037630215,\n                0.043211382,\n                -0.014915604,\n                -0.030099299,\n                0.015342113,\n                -0.017949905,\n                -0.02236122,\n                0.019619381,\n                -0.0043747565,\n                -0.032000307,\n                -0.028978191,\n                -0.010510383,\n                0.040676706,\n                0.031147292,\n                -0.014050402,\n                0.025200548,\n                -0.040676706,\n                0.004289455,\n                -0.036582224,\n                -0.015074021,\n                0.036435995,\n                -0.015171509,\n                -0.017206563,\n                -0.005824885,\n                -0.05751769,\n                -0.046550333,\n                0.0016557662,\n                -0.011198889,\n                -0.0063793454,\n                0.0126855755,\n                -0.019180687,\n                -0.030659853,\n                0.01766963,\n                0.009876713,\n                -0.059272468,\n                0.017438097,\n                -0.0025087828,\n                0.008438772,\n                0.010449453,\n                -0.0035674372,\n                -0.008073193,\n                -0.02395758,\n                0.014915604,\n                -0.0014120471,\n                0.010492104,\n                0.007323757,\n                -0.0022574475,\n                -0.008475329,\n                -0.019546265,\n                -0.0015796039,\n                0.026735976,\n                0.0060107205,\n                -0.027978944,\n                -0.021276671,\n                -0.020862348,\n                0.002679386,\n                0.05161969,\n                0.007786823,\n                -0.00009396511,\n                0.027613366,\n                0.032341514,\n                0.007963519,\n                -0.017645257,\n                -0.044015657,\n                0.012259067,\n                0.021751923,\n                -0.005553747,\n                -0.022836473,\n                0.019777799,\n                -0.020423654,\n                -0.0053374465,\n                -0.013660451,\n                -0.004752521,\n                -0.011643676,\n                -0.00086215604,\n                -0.011442608,\n                0.0067510167,\n                -0.037605844,\n                0.0025362012,\n                0.0012597227,\n                -0.007933054,\n                -0.016792241,\n                0.01715782,\n                -0.0332189,\n                -0.024103811,\n                0.0095416,\n                -0.018425157,\n                -0.035388,\n                0.0014981104,\n                0.01384324,\n                0.032365885,\n                0.008036635,\n                0.01378231,\n                0.06872877,\n                0.040457357,\n                -0.027905827,\n                0.029709348,\n                0.007677149,\n                0.025371151,\n                0.012563716,\n                -0.022239361,\n                -0.038337003,\n                -0.011204982,\n                -0.026979696,\n                -0.0411154,\n                -0.0121433,\n                0.011631491,\n                0.010272757,\n                0.006671808,\n                0.0029444303,\n                -0.018498274,\n                0.028393267,\n                0.022202803,\n                0.0073420354,\n                0.0625383,\n                0.020862348,\n                0.015244625,\n                -0.015244625,\n                0.022885216,\n                -0.006683994,\n                -0.0048043113,\n                -0.0046062893,\n                0.005763955,\n                -0.034364384,\n                0.005806606,\n                -0.03217091,\n                0.014647514,\n                0.015390856,\n                -0.020569885,\n                0.0010220966,\n                -0.03470559,\n                0.04165158,\n                -0.01844953,\n                -0.015390856,\n                0.023275167,\n                -0.00567256,\n                -0.01736498,\n                -0.028100803,\n                0.00204267,\n                0.003923876,\n                -0.023701675,\n                0.02164225,\n                -0.0017532537,\n                -0.0139163565,\n                0.017742746,\n                -0.029709348,\n                -0.022178432,\n                0.047086515,\n                -0.0038934115,\n                -0.02780834,\n                0.06682776,\n                0.008073193,\n                0.012466228,\n                0.025834216,\n                0.025103059,\n                -0.0030937083,\n                -0.015403043,\n                0.010382431,\n                0.03295081,\n                -0.024055067,\n                -0.02383572,\n                -0.019619381,\n                -0.012003162,\n                -0.000119479446,\n                0.0017166958,\n                -0.019509709,\n                0.025566125,\n                0.020996394,\n                -0.028003316,\n                0.0042803152,\n                -0.0038659929,\n                0.021227926,\n                -0.012277346,\n                0.07530918,\n                -0.01736498,\n                -0.013465476,\n                -0.010748009,\n                0.02778397,\n                0.03960434,\n                -0.012076277,\n                -0.00790259,\n                -0.0062453,\n                0.0024250043,\n                0.044746812,\n                0.007725893,\n                0.0054501668,\n                -0.0033876945,\n                0.034656845,\n                -0.0054623527,\n                -0.011540095,\n                -0.013489848,\n                0.02600482,\n                0.0043290593,\n                -0.022592753,\n                0.045185506,\n                0.03714278,\n                0.02832015,\n                -0.047354605,\n                -0.02817392,\n                -0.011948325,\n                -0.018315485,\n                0.0050145187,\n                -0.0045088017,\n                0.008274261,\n                0.008371748,\n                0.040554844,\n                -0.001242967,\n                -0.02440846,\n                0.029100051,\n                0.046014152,\n                0.024335345,\n                0.023579815,\n                0.017291864,\n                0.007884311,\n                0.054885525,\n                -0.0036557852,\n                -0.0072567337,\n                0.0012833329,\n                -0.00051561807,\n                -0.009230858,\n                0.0039330157,\n                -0.049133755,\n                -0.010144805,\n                -0.0039695734,\n                0.0013206524,\n                -0.028490754,\n                0.007829473,\n                0.0045088017,\n                -0.035168655,\n                -0.020411469,\n                0.022617126,\n                -0.0017075564,\n                0.030513622,\n                -0.029148795,\n                -0.0029185354,\n                -0.021471646,\n                0.048524458,\n                0.03219528,\n                0.01883948,\n                -0.036825944,\n                -0.03190282,\n                -0.02293396,\n                -0.0124906,\n                0.007171432,\n                -0.0002012586,\n                0.017352795,\n                -0.013026781,\n                -0.0133801745,\n                0.03161036,\n                0.0045666853,\n                0.03421815,\n                0.009316159,\n                -0.025078688,\n                0.009261323,\n                0.005925419,\n                0.02422567,\n                -0.0031744402,\n                0.021751923,\n                0.032073423,\n                0.027320903,\n                0.030026184,\n                -0.0040305033,\n                0.056981508,\n                -0.034778703,\n                0.016572893,\n                -0.0034455776,\n                -0.01220423,\n                0.00232447,\n                0.04396691,\n                -0.030976688,\n                -0.038288258,\n                0.0016572893,\n                0.05766392,\n                0.005943698,\n                -0.0149277905,\n                -0.0077746366,\n                0.024786225,\n                0.010126526,\n                0.038726952,\n                0.0287101,\n                0.013623893,\n                -0.023494514,\n                -0.01300241,\n                0.02031398,\n                -0.025273662,\n                -0.011229354,\n                0.010004666,\n                0.005239959,\n                0.0035552513,\n                -0.038629465,\n                -0.000015589449,\n                -0.04589229,\n                -0.006120394,\n                0.009523321,\n                -0.030927943,\n                0.009230858,\n                -0.0030860922,\n                -0.038142025,\n                0.014013844,\n                0.0060350923,\n                -0.0054593063,\n                -0.014866861,\n                -0.018157067,\n                0.0016192083,\n                0.010516476,\n                0.015658947,\n                0.0022513545,\n                0.004795172,\n                -0.026272912,\n                -0.022751171,\n                0.0114365155,\n                -0.0550805,\n                0.04265083,\n                -0.021288857,\n                0.040043034,\n                0.017267494,\n                -0.0059497906,\n                -0.008176773,\n                0.007323757,\n                0.018242368,\n                0.008201146,\n                0.023348283,\n                -0.028661357,\n                -0.019131944,\n                -0.013087711,\n                -0.018973526,\n                -0.012185951,\n                0.033901315,\n                0.012411391,\n                0.0065438556,\n                -0.0011051134,\n                0.0014859245,\n                0.014001658,\n                -0.007025201,\n                0.0006709889,\n                -0.030196788,\n                0.025273662,\n                -0.031171663,\n                0.0108028455,\n                -0.006671808,\n                -0.012064092,\n                0.00029988863,\n                0.021361973,\n                -0.01113796,\n                -0.00062643405,\n                0.0070373868,\n                -0.0005586497,\n                0.018681062,\n                -0.0037502265,\n                -0.042212136,\n                -0.024103811,\n                -0.013502033,\n                0.005565933,\n                -0.007457802,\n                -0.029538745,\n                0.0055628866,\n                0.02082579,\n                0.03667971,\n                0.0047616605,\n                0.00915165,\n                0.0022620172,\n                0.0024006325,\n                -0.008591096,\n                -0.0023092378,\n                -0.008603281,\n                0.013709195,\n                -0.0061721844,\n                0.006138673,\n                -0.036289763,\n                0.024493761,\n                0.013855427,\n                0.011253726,\n                -0.035168655,\n                0.035777953,\n                -0.0018644505,\n                -0.016511964,\n                -0.020119006,\n                -0.0041523627,\n                0.011058751,\n                0.0098888995,\n                -0.023019262,\n                0.00046839748,\n                0.013818868,\n                0.011783815,\n                0.023384841,\n                0.035266142,\n                -0.012600274,\n                0.010309314,\n                0.002616933,\n                0.002280296,\n                -0.014659699,\n                0.007890403,\n                0.01869325,\n                0.00720799,\n                0.016877543,\n                -0.0205577,\n                0.052058384,\n                0.0058919075,\n                0.014659699,\n                -0.01709689,\n                0.02780834,\n                -0.00692162,\n                -0.021166997,\n                0.038020167,\n                -0.007939147,\n                0.019826543,\n                -0.005556794,\n                0.028636985,\n                0.014818117,\n                -0.010297129,\n                0.007713707,\n                -0.017840233,\n                0.0070922235,\n                0.026053563,\n                0.012161579,\n                0.008487515,\n                0.036752827,\n                0.017218748,\n                -0.014050402,\n                -0.021057324,\n                0.014720629,\n                -0.004810404,\n                0.011546189,\n                -0.008469236,\n                0.016085455,\n                0.004990147,\n                -0.0014676455,\n                0.007939147,\n                -0.03663097,\n                0.006476833,\n                -0.0024996432,\n                -0.018632319,\n                0.02031398,\n                0.09734138,\n                0.00015556128,\n                0.0039330157,\n                -0.01568332,\n                0.007933054,\n                -0.0220322,\n                -0.031951565,\n                -0.01631699,\n                0.062343325,\n                -0.013709195,\n                0.0057700477,\n                -0.026833465,\n                0.009565972,\n                0.003128743,\n                0.042260878,\n                0.03957997,\n                -0.030537993,\n                0.0067814817,\n                0.027467133,\n                0.014403794,\n                0.028393267,\n                -0.006964271,\n                0.02768648,\n                -0.028393267,\n                -0.012929294,\n                -0.009102905,\n                0.011820372,\n                -0.043479472,\n                0.0008560631,\n                -0.0013914832,\n                0.024786225,\n                0.014513467,\n                0.011643676,\n                -0.03719152,\n                0.008280354,\n                0.009529414,\n                0.033145785,\n                -0.025834216,\n                0.0062940437,\n                0.010102154,\n                -0.048256367,\n                0.025371151,\n                -0.03268272,\n                0.019765614,\n                0.01673131,\n                0.0074090585,\n                -0.015719878,\n                -0.045404855,\n                0.021325415,\n                -0.012454042,\n                0.032585233,\n                -0.018705435,\n                -0.014440352,\n                -0.028856331,\n                -0.008511887,\n                0.010601778,\n                -0.0028073385,\n                -0.009876713,\n                0.00414627,\n                -0.00044212153,\n                -0.027467133,\n                -0.016329175,\n                0.013014596,\n                0.0070983167,\n                0.01660945,\n                0.013099898,\n                -0.029416885,\n                0.014464724,\n                -0.00047030154,\n                0.00880435,\n                0.024262229,\n                0.026979696,\n                -0.018315485,\n                -0.02227592,\n                0.029124424,\n                0.016828798,\n                0.03368197,\n                0.0010038178,\n                0.0014745,\n                -0.047232747,\n                -0.011503538,\n                0.015451786,\n                0.028588241,\n                0.0066657155,\n                -0.022129687,\n                0.025127431,\n                -0.02805206,\n                0.013246129,\n                0.004143223,\n                0.022946145,\n                -0.027905827,\n                -0.0017349748,\n                -0.0038142027,\n                0.00088576635,\n                -0.0027007114,\n                0.043113895,\n                -0.02756462,\n                -0.014062587,\n                -0.0032932532,\n                -0.006568228,\n                -0.0352174,\n                0.01736498,\n                -0.0040762005,\n                -0.006580414,\n                0.0110404715,\n                -0.030659853,\n                -0.0052308193,\n                -0.030196788,\n                -0.017267494,\n                -0.0061752307,\n                -0.0024448065,\n                0.002185855,\n                0.021020766,\n                0.023604188,\n                -0.008158495,\n                0.053520698,\n                -0.057712663,\n                0.00068584055,\n                0.025322406,\n                0.015598018,\n                0.016560707,\n                -0.015780807,\n                -0.019241616,\n                0.035972927,\n                0.018754179,\n                0.015415228,\n                -0.0017989511,\n                0.0330483,\n                0.014964348,\n                0.0346081,\n                -0.005185122,\n                -0.034096293,\n                -0.009626902,\n                0.002085321,\n                -0.021654435,\n                0.020813605,\n                -0.035144284,\n                0.011503538,\n                0.010815032,\n                -0.03589981,\n                -0.03112292,\n                0.00018221805,\n                -0.03585107,\n                -0.005285656,\n                -0.015756436,\n                0.016548522,\n                0.0032262306,\n                0.0010236199,\n                0.03419378,\n                -0.003259742,\n                -0.01736498,\n                -0.014391609,\n                0.04213902,\n                -0.008511887,\n                0.01384324,\n                -0.002179762,\n                0.03960434,\n                0.03897067,\n                -0.0129049225,\n                -0.02844201,\n                -0.04842697,\n                -0.026930952,\n                -0.004383896,\n                0.023738233,\n                0.011838651,\n                -0.023628559,\n                0.012758691,\n                0.038361374,\n                0.0030464877,\n                0.008871373,\n                -0.038775697,\n                -0.00778073,\n                -0.010912519,\n                0.030269902,\n                0.014403794,\n                -0.014099145,\n                -0.010778474,\n                0.05137597,\n                -0.023141121,\n                -0.033097044,\n                -0.000017529204,\n                -0.0009337485,\n                -0.004889613,\n                -0.0070800376,\n                0.013441104,\n                0.010863775,\n                -0.020021517,\n                -0.014330679,\n                -0.021154812,\n                0.010540848,\n                -0.03921439,\n                -0.020216493,\n                -0.022860844,\n                0.035972927,\n                -0.012563716,\n                0.010242292,\n                -0.012612459,\n                0.008889651,\n                0.007993984,\n                0.02293396,\n                0.0036740643,\n                -0.020764861,\n                0.016304802,\n                0.006482926,\n                0.018632319,\n                0.0036801572,\n                -0.029733721,\n                0.007677149,\n                0.019765614,\n                -0.002348842,\n                0.020204308,\n                0.012563716,\n                -0.015390856,\n                0.018510459,\n                -0.0008195052,\n                0.0057852804,\n                0.0070922235,\n                0.0068728765,\n                0.043650076,\n                0.006964271,\n                0.004109712,\n                -0.021483831,\n                -0.016475406,\n                -0.049669936,\n                0.01832767,\n                -0.018985711,\n                -0.02227592,\n                0.016682567,\n                -0.003035825,\n                -0.019071013,\n                0.012709947,\n                -0.022678055,\n                -0.0018202765,\n                -0.022288105,\n                -0.05005989,\n                0.0015719876,\n                -0.009407554,\n                -0.031293523,\n                -0.017559955,\n                0.0032658349,\n                -0.023470141,\n                -0.0001422329,\n                -0.03048925,\n                0.0016085455,\n                -0.021410717,\n                0.011716792,\n                0.043918166,\n                0.04218776,\n                -0.036801573,\n                0.013940728,\n                -0.016597265,\n                0.037313383,\n                -0.008097565,\n                0.019558452,\n                0.018023022,\n                -0.0070922235,\n                0.045551084,\n                0.0035126004,\n                -0.017864604,\n                -0.03560735,\n                -0.030757342,\n                -0.050401095,\n                -0.010735823,\n                -0.010449453,\n                -0.00829254,\n                0.017511211,\n                0.03780082,\n                -0.016012339,\n                -0.01363608,\n                0.0025453405,\n                -0.03161036,\n                0.0006469978,\n                0.043381985,\n                -0.017194377,\n                -0.003366369,\n                -0.0054501668,\n                -0.022799915,\n                -0.025005572,\n                0.04238274,\n                0.0411154,\n                -0.021288857,\n                0.040969167,\n                -0.0058797216,\n                -0.013721381,\n                0.000068545975,\n                0.017218748,\n                -0.006300137,\n                0.047086515,\n                -0.025054315,\n                -0.0046123825,\n                0.026321655,\n                0.021118253,\n                0.01965594,\n                0.03270709,\n                0.020253051,\n                0.012064092,\n                0.016207315,\n                -0.00040442124,\n                -0.009230858,\n                -0.006805854,\n                0.003378555,\n                -0.013148641,\n                0.0013937681,\n                -0.0027875362,\n                0.047622696,\n                -0.023884464,\n                0.018815108,\n                0.0033694154,\n                -0.022020014,\n                -0.00048972294,\n                0.012405299,\n                -0.0051881685,\n                0.0017349748,\n                0.014598769,\n                -0.005316121,\n                0.0038812254,\n                -0.01408696,\n                0.018230183,\n                0.03921439,\n                0.009450205,\n                0.032097794,\n                0.022982704,\n                -0.0095416,\n                -0.0029231051,\n                -0.008572817,\n                -0.002391493,\n                -0.01408696,\n                -0.001345786,\n                0.0049871006,\n                -0.00527347,\n                -0.0346081,\n                -0.023287352,\n                0.004109712,\n                -0.0027692574,\n                0.020898907,\n                0.0005525567,\n                -0.018437345,\n                -0.0015719876,\n                -0.0001145289,\n                -0.00692162,\n                -0.0034486242,\n                0.016694752,\n                -0.0075796614,\n                -0.032000307,\n                -0.010967356,\n                0.017718373,\n                0.01294148,\n                0.021630064,\n                0.052887026,\n                -0.0034486242,\n                0.00929788,\n                0.018949155,\n                -0.01408696,\n                0.0017867651,\n                -0.012234695,\n                0.021532577,\n                0.056835275,\n                -0.016024526,\n                -0.016658194,\n                0.0043260125,\n                -0.006495112,\n                -0.004959682,\n                0.0049749147,\n                0.010327593,\n                -0.027004067,\n                0.026979696,\n                -0.032292772,\n                0.03397443,\n                -0.0014432736,\n                -0.0162195,\n                -0.008042728,\n                -0.004414361,\n                -0.013038968,\n                -0.038605094,\n                -0.012795249,\n                -0.024128184,\n                -0.012649017,\n                -0.0049444498,\n                0.027491506,\n                -0.0074090585,\n                -0.005791373,\n                0.021605691,\n                -0.020399282,\n                0.032512117,\n                0.03524177,\n                0.027394019,\n                -0.022397779,\n                0.012137207,\n                0.056445327\n            ]\n        }\n    ],\n    \"model\": \"text-embedding-3-small\",\n    \"usage\": {\n        \"prompt_tokens\": 11,\n        \"total_tokens\": 11\n    }\n}"
						}
					]
				},
				{
					"name": "Generate Image ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Created field is present and is a non-negative integer\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.created).to.exist;",
									"  pm.expect(responseData.created).to.be.a('number');",
									"  pm.expect(responseData.created).to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Data array is present and contains expected number of elements\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.exist.and.to.be.an('array').with.lengthOf(1);",
									"});",
									"",
									"",
									"pm.test(\"Revised prompt and URL in data array are non-empty strings\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array');",
									"    ",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.revised_prompt).to.be.a('string').and.to.have.lengthOf.at.least(1, \"revised_prompt should not be empty\");",
									"        pm.expect(item.url).to.be.a('string').and.to.have.lengthOf.at.least(1, \"url should not be empty\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"dall-e-3\",\n    \"prompt\": \"A cute baby sea otter\",\n    \"n\": 1,\n    \"size\": \"1024x1024\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/1/v1/images/generations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"images",
								"generations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Image Edit",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "/home/dimitris/Downloads/oie_transparent(1).png"
								},
								{
									"key": "mask",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "prompt",
									"value": "Make him have a devil face.",
									"type": "text"
								},
								{
									"key": "n",
									"value": "2",
									"type": "text"
								},
								{
									"key": "size",
									"value": "1024x1024",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/1/v1/images/edits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"images",
								"edits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Image Variation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "/home/dimitris/Desktop/Maltese-Mixed-Breeds.png"
								},
								{
									"key": "n",
									"value": "1",
									"type": "text"
								},
								{
									"key": "size",
									"value": "512x512",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/1/v1/images/variations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"images",
								"variations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Moderations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Content type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Id and model fields must exist\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.id).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.model).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Results array is present and contains at least one element\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.have.property('results').that.is.an('array').and.not.empty;",
									"});",
									"",
									"",
									"pm.test(\"Results array contains expected fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.results).to.be.an('array');",
									"    ",
									"    responseData.results.forEach(function(result) {",
									"        pm.expect(result.flagged).to.exist;",
									"        pm.expect(result.categories).to.exist;",
									"        pm.expect(result.category_scores).to.exist;",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"I want to kill them.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/1/v1/moderations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"v1",
								"moderations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Use case 2 : Upload file - Create batch",
			"item": [
				{
					"name": "Upload Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"FILE_ID\", jsonData.id);",
									"pm.collectionVariables.set(\"filename\", jsonData.filename);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "purpose",
									"value": "batch",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/home/dimitris/Desktop/batch.jsonl"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/2/v1/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Validate the data object and its fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array');",
									"    ",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item).to.be.an('object');",
									"        pm.expect(item).to.have.property('id');",
									"        pm.expect(item).to.have.property('purpose');",
									"        pm.expect(item).to.have.property('filename');",
									"        pm.expect(item).to.have.property('bytes');",
									"        pm.expect(item).to.have.property('created_at');",
									"        pm.expect(item).to.have.property('status');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Has_more field is present and has a boolean value\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.has_more).to.exist.and.to.be.a('boolean');",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.data).to.be.an('array');",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.id).to.be.a('string').and.to.have.lengthOf.at.least(1);",
									"    });",
									"});",
									"",
									"pm.test(\"Bytes is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.data).to.be.an('array');",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.bytes).to.be.a('number').and.to.be.at.least(0);",
									"    });",
									"});",
									"",
									"pm.test(\"Created_at is a valid timestamp\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.data).to.be.an('array');",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.created_at).to.be.a('number');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2/v1/files?purpose=batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"files"
							],
							"query": [
								{
									"key": "purpose",
									"value": "batch"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve File",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2/v1/files/{{FILE_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"files",
								"{{FILE_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve File Contents",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2/v1/files/{{FILE_ID}}/content",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"files",
								"{{FILE_ID}}",
								"content"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"BATCH_ID\", jsonData.id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input_file_id\": \"{{FILE_ID}}\",\n    \"endpoint\": \"/v1/chat/completions\",\n    \"completion_window\": \"24h\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/2/v1/batches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Batch",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2/v1/batches/{{BATCH_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"batches",
								"{{BATCH_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"FILE_ID\", jsonData.id);",
									"pm.collectionVariables.set(\"filename\", jsonData.filename);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "purpose",
									"value": "batch",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/home/dimitris/Desktop/batch2.jsonl"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/2/v1/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"BATCH_ID\", jsonData.id);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input_file_id\": \"{{FILE_ID}}\",\n    \"endpoint\": \"/v1/chat/completions\",\n    \"completion_window\": \"24h\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/2/v1/batches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"batches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Batch",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2/v1/batches/{{BATCH_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"batches",
								"{{BATCH_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('object');",
									"    pm.expect(responseData).to.have.property('data');",
									"    pm.expect(responseData).to.have.property('first_id');",
									"    pm.expect(responseData).to.have.property('last_id');",
									"    pm.expect(responseData).to.have.property('has_more');",
									"});",
									"",
									"",
									"pm.test(\"Data array is present and contains the expected number of elements\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.exist.and.to.be.an('array');",
									"    pm.expect(responseData.data).to.have.lengthOf.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Validate object is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.object).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Object should be a non-empty string\");",
									"});",
									"",
									"",
									"pm.test(\"Verify Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2/v1/batches?limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"batches"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Batch",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2/v1/batches/{{BATCH_ID}}/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"batches",
								"{{BATCH_ID}}",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete File",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/2/v1/files/{{FILE_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"2",
								"v1",
								"files",
								"{{FILE_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Use case 3 : Fine tuning",
			"item": [
				{
					"name": "List Models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, object, created, and owned_by\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
									"  ",
									"  responseData.data.forEach(function(item) {",
									"    pm.expect(item).to.have.property('id');",
									"    pm.expect(item).to.have.property('object');",
									"    pm.expect(item).to.have.property('created');",
									"    pm.expect(item).to.have.property('owned_by');",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Data array contains at least one element\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string and created is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");",
									"        pm.expect(item.created).to.be.a('number').and.to.be.at.least(0, \"Created should be a non-negative integer\");",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Object property must be a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.object).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Object should be a non-empty string\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"model\", jsonData.data[15].id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/models",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.have.property('id');",
									"  pm.expect(responseData).to.have.property('object');",
									"  pm.expect(responseData).to.have.property('created');",
									"  pm.expect(responseData).to.have.property('owned_by');",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Created is a valid timestamp\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.created).to.match(/^\\d{10}$/);",
									"});",
									"",
									"",
									"pm.test(\"Owned_by is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.owned_by).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Owned_by should be a non-empty string\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/models/{{model}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"models",
								"{{model}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Training File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"FILE_ID\", jsonData.id);",
									"pm.collectionVariables.set(\"filename\", jsonData.filename);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "purpose",
									"value": "fine-tune",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/home/dimitris/Desktop/training.jsonl"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/3/v1/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve File Contents",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/files/{{FILE_ID}}/content",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"files",
								"{{FILE_ID}}",
								"content"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Fine Tuning Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"JOB_ID\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"training_file\": \"{{FILE_ID}}\",\n    \"model\": \"{{model}}\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Fine Tuning Jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Data array is present and contains at least one element\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
									"});",
									"",
									"",
									"pm.test(\"Hyperparameters object contains expected keys\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array').and.not.empty;",
									"    ",
									"    responseData.data.forEach(function(job) {",
									"        pm.expect(job.hyperparameters).to.be.an('object');",
									"        pm.expect(job.hyperparameters).to.include.all.keys('n_epochs', 'batch_size', 'learning_rate_multiplier');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Result files array is present and not empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array');",
									"    ",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.result_files).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1, \"Result files array should not be empty\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs?limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Fine Tuning Jobs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs/{{JOB_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs",
								"{{JOB_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Fine Tuning Events",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs/{{JOB_ID}}/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs",
								"{{JOB_ID}}",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Fine Tuning Events",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs/{{JOB_ID}}/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs",
								"{{JOB_ID}}",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Fine Tuning Checkpoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"model\", jsonData.data[0].fine_tuned_model_checkpoint);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs/{{JOB_ID}}/checkpoints",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs",
								"{{JOB_ID}}",
								"checkpoints"
							]
						}
					},
					"response": []
				},
				{
					"name": "Chat Completions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let messages = [",
									"      {",
									"        \"role\": \"system\",",
									"        \"content\": \"You are a helpful assistant.\"",
									"      },",
									"      {",
									"        \"role\": \"user\",",
									"        \"content\": \"Who won the world series in 2020?\"",
									"      },",
									"      {",
									"        \"role\": \"assistant\",",
									"        \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"",
									"      },",
									"      {",
									"        \"role\": \"user\",",
									"        \"content\": \"Where was it played?\"",
									"      }",
									"    ];",
									"",
									"pm.collectionVariables.set('messages', JSON.stringify(messages));",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Validate the choices array\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.choices).to.be.an('array').that.is.not.empty;",
									"    responseData.choices.forEach(function(choice) {",
									"        pm.expect(choice).to.be.an('object');",
									"        pm.expect(choice.index).to.exist.and.to.be.a('number');",
									"        pm.expect(choice.message).to.exist.and.to.be.an('object');",
									"        pm.expect(choice.finish_reason).to.exist.and.to.be.a('string');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Created field is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.created).to.be.a('number').and.to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Model field should not be empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.model).to.exist.and.to.not.be.empty;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{vault:OpenAIKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"{{model}}\",\n    \"messages\": {{messagesFineTune}} \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/3/v1/chat/completions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"chat",
								"completions"
							]
						}
					},
					"response": [
						{
							"name": "Chat Completions",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{vault:OpenAIKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"{{model}}\",\n    \"messages\": {{messages}} \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.openai.com/v1/chat/completions",
									"protocol": "https",
									"host": [
										"api",
										"openai",
										"com"
									],
									"path": [
										"v1",
										"chat",
										"completions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 17 Jun 2024 06:23:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "openai-organization",
									"value": "user-3wdwkjaeznoulp9fnvi35lbh"
								},
								{
									"key": "openai-processing-ms",
									"value": "587"
								},
								{
									"key": "openai-version",
									"value": "2020-10-01"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15724800; includeSubDomains"
								},
								{
									"key": "x-ratelimit-limit-requests",
									"value": "10000"
								},
								{
									"key": "x-ratelimit-limit-tokens",
									"value": "60000"
								},
								{
									"key": "x-ratelimit-remaining-requests",
									"value": "9999"
								},
								{
									"key": "x-ratelimit-remaining-tokens",
									"value": "59946"
								},
								{
									"key": "x-ratelimit-reset-requests",
									"value": "8.64s"
								},
								{
									"key": "x-ratelimit-reset-tokens",
									"value": "54ms"
								},
								{
									"key": "x-request-id",
									"value": "req_ec576d7c4563894a83067c060d5c04a2"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "8950f4169e38f9d4-SJC"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"chatcmpl-9b04PNw9WxrCYkXRWJXcOyH5My4BG\",\n    \"object\": \"chat.completion\",\n    \"created\": 1718605433,\n    \"model\": \"gpt-3.5-turbo-0125\",\n    \"choices\": [\n        {\n            \"index\": 0,\n            \"message\": {\n                \"role\": \"assistant\",\n                \"content\": \"The 2020 World Series was played at Globe Life Field in Arlington, Texas.\"\n            },\n            \"logprobs\": null,\n            \"finish_reason\": \"stop\"\n        }\n    ],\n    \"usage\": {\n        \"prompt_tokens\": 53,\n        \"completion_tokens\": 17,\n        \"total_tokens\": 70\n    },\n    \"system_fingerprint\": null\n}"
						}
					]
				},
				{
					"name": "Delete Fine Tuned Model",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/models/{{model}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"models",
								"{{model}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Training File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"FILE_ID\", jsonData.id);",
									"pm.collectionVariables.set(\"filename\", jsonData.filename);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "purpose",
									"value": "fine-tune",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/home/dimitris/Desktop/training3.jsonl"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/3/v1/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"files"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Fine Tuning Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"JOB_ID\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"training_file\": \"{{FILE_ID}}\",\n    \"model\": \"gpt-3.5-turbo-0125\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Fine Tuning Jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Data array is present and contains at least one element\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
									"});",
									"",
									"",
									"pm.test(\"Hyperparameters object contains expected keys\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array').and.not.empty;",
									"    ",
									"    responseData.data.forEach(function(job) {",
									"        pm.expect(job.hyperparameters).to.be.an('object');",
									"        pm.expect(job.hyperparameters).to.include.all.keys('n_epochs', 'batch_size', 'learning_rate_multiplier');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Result files array is present and not empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('array');",
									"    ",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item.result_files).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1, \"Result files array should not be empty\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs?limit=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Fine Tuning Jobs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs/{{JOB_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs",
								"{{JOB_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Fine Tuning Jobs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:openai-api:token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer $OPENAI_API_KEY"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/3/v1/fine_tuning/jobs/{{JOB_ID}}/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3",
								"v1",
								"fine_tuning",
								"jobs",
								"{{JOB_ID}}",
								"cancel"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{vault:openai-secret-key}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.openai.com/v1",
			"disabled": true
		},
		{
			"key": "messages",
			"value": "[{\"role\":\"system\",\"content\":\"You are a helpful assistant.\"},{\"role\":\"user\",\"content\":\"Who won the world series in 2020?\"},{\"role\":\"assistant\",\"content\":\"The Los Angeles Dodgers won the World Series in 2020.\"},{\"role\":\"user\",\"content\":\"Where was it played?\"}]"
		},
		{
			"key": "model",
			"value": "gpt-4o",
			"type": "string"
		},
		{
			"key": "storedEmbeddings",
			"value": ""
		},
		{
			"key": "inputStringUser",
			"value": ""
		},
		{
			"key": "userInputEmbeddings",
			"value": ""
		},
		{
			"key": "embeddingModel",
			"value": "text-embedding-3-large",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "",
			"type": "string"
		},
		{
			"key": "inputStringAnswer",
			"value": "",
			"type": "string"
		},
		{
			"key": "FILE_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "model-id",
			"value": "",
			"type": "string"
		},
		{
			"key": "inputString",
			"value": ""
		},
		{
			"key": "filename",
			"value": ""
		},
		{
			"key": "BATCH_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "JOB_ID",
			"value": ""
		},
		{
			"key": "messagesFineTune",
			"value": "",
			"type": "string"
		}
	]
}